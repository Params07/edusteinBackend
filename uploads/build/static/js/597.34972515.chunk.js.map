{"version":3,"file":"static/js/597.34972515.chunk.js","mappings":"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","sources":["AdminComponents/Components/EmailDrafter.js","AdminComponents/Hooks/UsePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport usePost from '../Hooks/UsePost';\r\n\r\n\r\nconst EmailDrafter = ({ emails, onClose,showPopup }) => {\r\n  const [subject, setSubject] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [errors,setErrors]=useState({})\r\n  const { post, loading, error } = usePost(`/send-email`);\r\n  const [scheduleOption, setScheduleOption] = useState('now'); // 'now' or 'schedule'\r\n  const formatForDateTimeLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  };\r\n  \r\n  const [scheduleDate, setScheduleDate] = useState(formatForDateTimeLocal(new Date()));\r\n  const handleFilesChange = (e) => {\r\n    setFiles(Array.from(e.target.files));\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const newEr = {}\r\n    if ( !content) {\r\n      newEr.content = \"cant send empty email\"\r\n      setErrors(newEr);\r\n      return;\r\n    }\r\n    setErrors(newEr);\r\n    \r\n    setIsSending(true);\r\n    const formData = new FormData();\r\n    formData.append('subject', subject);\r\n    formData.append('message', content);\r\n    formData.append('to', JSON.stringify(emails));\r\n\r\n    files.forEach((file) => {\r\n      formData.append('files', file);\r\n    });\r\n    if (scheduleOption === 'schedule') {\r\n      const now = new Date();\r\n      const scheduledTime = new Date(scheduleDate);\r\n      const offset = 5.5 * 60 * 60 * 1000; \r\n      const scheduledTimeUTC = new Date(scheduledTime.getTime() - offset);\r\n       const delayMs = scheduledTime.getTime() - now.getTime();\r\n      \r\n      \r\n      formData.append('startDelay', delayMs);\r\n      console.log(delayMs)\r\n    }else{\r\n      formData.append('startDelay', 0);\r\n    }\r\n    try {\r\n      await post(formData);\r\n     showPopup({success: true, message: 'email sent' })\r\n      onClose(); \r\n    } catch (error) {\r\n      console.error('Failed to send emails:', error);\r\n      showPopup({success:false, message: 'Couldnt send email' })\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex justify-center items-center\">\r\n      <div className=\"bg-white w-11/12 md:w-2/3 lg:w-1/2 p-4 rounded-lg\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-lg font-bold\">Draft Email</h2>\r\n          <button onClick={onClose} className=\"text-xl font-bold\">&times;</button>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">To:</label>\r\n          <div className=\"border p-2 rounded\">\r\n            {emails.join(', ')}\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Subject:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={subject}\r\n            required\r\n            onChange={(e) => setSubject(e.target.value)}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Body:</label>\r\n          <ReactQuill value={content} onChange={setContent} />\r\n          {errors.content && <p className='text-red-300'> {errors.content}</p>}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Attach Files:</label>\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            onChange={handleFilesChange}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          />\r\n          {files.length > 0 && (\r\n            <div>\r\n              <h3 className=\"font-semibold mt-2\">Selected Files:</h3>\r\n              <ul>\r\n                {files.map((file, index) => (\r\n                  <li key={index}>{file.name}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n       \r\n          <label className=\"block text-sm font-bold mb-2\">Schedule Email:</label>\r\n          <select\r\n            value={scheduleOption}\r\n            onChange={(e) => setScheduleOption(e.target.value)}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          >\r\n            <option value=\"now\">Send Now</option>\r\n            <option value=\"schedule\">Schedule for Later</option>\r\n          </select>\r\n          {scheduleOption === 'schedule' && (\r\n            <div className=\"mt-2\">\r\n              <label className=\"block text-sm font-bold mb-2\">Schedule Date & Time:</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                min={formatForDateTimeLocal(new Date())}\r\n\r\n                value={scheduleDate}\r\n\r\n                onChange={(e) => setScheduleDate(e.target.value)}\r\n                className=\"w-full border border-gray-300 p-2 rounded\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end mt-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded mr-2\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleSend}\r\n            className={`bg-blue-500 text-white px-4 py-2 rounded ${loading || isSending ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n            disabled={loading || isSending}\r\n          >\r\n            {loading || isSending ? 'Sending...' : 'Send'}  \r\n          </button>\r\n        </div>\r\n        {error && <p className=\"text-red-500 mt-2\">Error: {error.message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default EmailDrafter;\r\n","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst usePost = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const post = async (data) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const isFormData = data instanceof FormData;\r\n      console.log(isFormData)\r\n      const response = await axios.post(url, data, {\r\n        withCredentials: true, \r\n        headers: isFormData ? {\r\n          'Content-Type': 'multipart/form-data',\r\n        } : {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setLoading(false);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err);\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n\r\n  return { post, loading, error };\r\n};\r\n\r\nexport default usePost;\r\n"],"names":["_ref","emails","onClose","showPopup","subject","setSubject","useState","content","setContent","files","setFiles","isSending","setIsSending","errors","setErrors","post","loading","error","usePost","scheduleOption","setScheduleOption","formatForDateTimeLocal","date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","scheduleDate","setScheduleDate","Date","_jsx","className","children","_jsxs","onClick","join","type","value","required","onChange","e","target","ReactQuill","multiple","Array","from","length","map","file","index","name","min","async","newEr","formData","FormData","append","JSON","stringify","forEach","now","scheduledTime","offset","delayMs","getTime","console","log","success","message","disabled","url","setLoading","setError","isFormData","data","response","axios","withCredentials","headers","err"],"sourceRoot":""}