{"version":3,"file":"static/js/285.98715e87.chunk.js","mappings":"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","sources":["AdminComponents/Components/BootcampSelect.js","AdminComponents/Components/PromoCodeForm.js","AdminComponents/Hooks/Get.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst BootcampSelect = ({ selectedBootcamp, setSelectedBootcamp, isMulti = false,isBootcampActive }) => {\r\n  const [options, setOptions] = useState([]);\r\n  \r\n  \r\n    let url = `/bootcamps/bootcamp?isBootcampActive=${isBootcampActive}`;\r\n  \r\n  \r\n  const { data: bootcampData = [] } = useGet(url);\r\n \r\n  useEffect(() => {\r\n    if (bootcampData) {\r\n      const formattedOptions = bootcampData.map((i) => ({\r\n        label: i.title,\r\n        value: i.id,\r\n      }));\r\n      setOptions(formattedOptions);\r\n      if (!selectedBootcamp && formattedOptions.length > 0 && !isMulti) {\r\n        setSelectedBootcamp(formattedOptions[0]);\r\n      }\r\n    }\r\n  }, [bootcampData, selectedBootcamp, isMulti,isBootcampActive]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedBootcamp(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      className=\"w-64 h-8\"\r\n      name=\"bootcamp\"\r\n      value={selectedBootcamp}\r\n      options={options}\r\n      isMulti={isMulti}\r\n      placeholder=\"Bootcamp Name\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BootcampSelect;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport BootcampSelect from './BootcampSelect';\r\nimport useGet from '../Hooks/Get';\r\nimport {PROMO_TYPES,DISCOUNT_TYPES} from '../../PublicComponents/Components/Enum'\r\n\r\nconst PromoCodeForm = ( {action} ) => {\r\n  \r\n  const [bootcamps, setBootcamps] = useState([]);\r\n  const [emails, setEmail] = useState(null);\r\n  const [promoType, setPromoType] = useState(PROMO_TYPES.PARTICULAR_BOOTCAMP);\r\n  const [discountType, setDiscountType] = useState(DISCOUNT_TYPES.FLAT);\r\n  const [discountValue, setDiscountValue] = useState('');\r\n  const [maxDiscount, setMaxDiscount] = useState(0);\r\n  const [bootcampId, setBootcampId] = useState(null);\r\n  const [expirationDate, setExpirationDate] = useState('');\r\n  const [isActive, setIsActive] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n  const [minDateTime, setMinDateTime] = useState('');\r\n\r\n  const bootcampUrl = useMemo(() => {\r\n    if (bootcamps.length < 1) return null;\r\n    const bootcampIds = bootcamps.map(bootcamp => bootcamp.value).join(',');\r\n    setBootcampId(bootcampIds);\r\n    \r\n    return `/registrations/getemails?bootcampIds=${bootcampIds}`;\r\n  }, [bootcamps]);\r\n\r\n  const { data } = useGet(bootcampUrl);\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0 && promoType != PROMO_TYPES.PARTICULAR_USER_AND_BOOTCAMP) {\r\n      const emailList = data.map((item) => item.email).join(',');\r\n      setEmail(emailList);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const now = new Date();\r\n    const minDateTimeString = now.toISOString().slice(0, 10);\r\n    setMinDateTime(minDateTimeString);\r\n  }, []);\r\n \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = {};\r\n\r\n    // Validation logic\r\n    if ((promoType === PROMO_TYPES.PARTICULAR_BOOTCAMP || promoType == PROMO_TYPES.PARTICULAR_USER_AND_BOOTCAMP) && !bootcampId) {\r\n      validationErrors.bootcampId = \"Bootcamp selection is required\";\r\n    }\r\n\r\n    if ((promoType === PROMO_TYPES.PARTICULAR_USERS || promoType == PROMO_TYPES.PARTICULAR_USER_AND_BOOTCAMP) && !emails) {\r\n      validationErrors.emails = \"Emails are required for this promo type\";\r\n    }\r\n    if (!discountValue || discountValue <= 0) {\r\n      validationErrors.discountValue = \"Enter a valid discount value\";\r\n    }\r\n    if (discountType === DISCOUNT_TYPES.PERCENTAGE && ((!discountValue || discountValue <= 0||discountValue>=100))) {\r\n      validationErrors.discountValue = \"Enter a valid maximum discount value\";\r\n    }\r\n    if(discountType == DISCOUNT_TYPES.UPTO_PERCENTAGE && maxDiscount<=0){\r\n      validationErrors.maxDiscount = \"enter the valid max discount\"\r\n    }\r\n    if (discountType !== DISCOUNT_TYPES.UPTO_PERCENTAGE) {\r\n      setMaxDiscount(0);\r\n    }\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      const promoData = {\r\n        promo_type: promoType,\r\n        discount_type: discountType,\r\n        discount_value: parseFloat(discountValue),\r\n        max_discount: maxDiscount ? parseFloat(maxDiscount) : null,\r\n        bootcamp_id: bootcampId || null,\r\n        emails: emails || null,\r\n        expiration_date: expirationDate || null,\r\n        is_active: isActive,\r\n      };\r\n\r\n     \r\n      action(promoData);\r\n      setBootcamps([]);\r\n    setEmail(null);\r\n    setPromoType(PROMO_TYPES.PARTICULAR_BOOTCAMP);\r\n    setDiscountType(DISCOUNT_TYPES.FLAT);\r\n    setDiscountValue('');\r\n    setMaxDiscount(0);\r\n    setBootcampId(null);\r\n    setExpirationDate('');\r\n    setIsActive(true);\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Promo Type */}\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"promo-type\" className=\"text-lg font-semibold mb-2\">Promo Type:</label>\r\n          <select\r\n            id=\"promo-type\"\r\n            name=\"promo-type\"\r\n            value={promoType}\r\n            onChange={(e) => setPromoType(e.target.value)}\r\n            className=\"p-2 border border-black rounded\"\r\n          >\r\n            {Object.entries(PROMO_TYPES).map(([key, value]) => (\r\n              <option key={key} value={value}>{key.replace('_', ' ')}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"discount-type\" className=\"text-lg font-semibold mb-2\">Discount Type:</label>\r\n          <select\r\n            id=\"discount-type\"\r\n            name=\"discount-type\"\r\n            value={discountType}\r\n            onChange={(e) => setDiscountType(e.target.value)}\r\n            className=\"p-2 border border-black rounded\"\r\n          >\r\n            {Object.entries(DISCOUNT_TYPES).map(([key, value]) => (\r\n              <option key={key} value={value}>{key.replace('_', ' ')}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Discount Value */}\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"discount-value\" className=\"text-lg font-semibold mb-2\">Discount {discountType === DISCOUNT_TYPES.FLAT ? 'Amount' : 'Percentage'}:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"discount-value\"\r\n            name=\"discount-value\"\r\n            value={discountValue}\r\n            onChange={(e) => setDiscountValue(e.target.value)}\r\n            className={`p-2 border rounded ${errors.discountValue ? 'border-red-500' : 'border-black'}`}\r\n            required\r\n            min=\"1\"\r\n          />\r\n          {errors.discountValue && <span className=\"text-red-500 text-sm\">{errors.discountValue}</span>}\r\n        </div>\r\n\r\n        {/* Max Discount */}\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"max-discount\" className=\"text-lg font-semibold mb-2\">Max Discount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"max-discount\"\r\n            name=\"max-discount\"\r\n            value={maxDiscount}\r\n            onChange={(e) => setMaxDiscount(e.target.value)}\r\n            className=\"p-2 border border-black rounded\"\r\n            disabled={discountType !== DISCOUNT_TYPES.UPTO_PERCENTAGE}\r\n            readOnly={discountType !== DISCOUNT_TYPES.UPTO_PERCENTAGE}\r\n            placeholder={discountType !== DISCOUNT_TYPES.UPTO_PERCENTAGE ? 'N/A' : ''}\r\n          />\r\n          {errors.maxDiscount && <span className=\"text-red-500 text-sm\">{errors.maxDiscount}</span>}\r\n        </div>\r\n\r\n        {/* Conditionally render bootcamp and email fields based on promo type */}\r\n        {promoType && promoType !== PROMO_TYPES.ANYONE &&\r\n          <div className=\"flex flex-col mb-4\">\r\n            <label htmlFor=\"bootcamp\" className=\"text-lg font-semibold mb-2\">{promoType === PROMO_TYPES.PARTICULAR_USERS ? 'Export from Bootcamps' : 'Bootcamps'}:</label>\r\n            <BootcampSelect selectedBootcamp={bootcamps} setSelectedBootcamp={setBootcamps} isMulti={true} isBootcampActive ={PROMO_TYPES.PARTICULAR_USERS!=promoType}/>\r\n            {errors.bootcampId && <span className=\"text-red-500 text-sm\">{errors.bootcampId}</span>}\r\n          </div>\r\n        }\r\n\r\n        {(promoType === PROMO_TYPES.PARTICULAR_USERS || promoType == PROMO_TYPES.PARTICULAR_USER_AND_BOOTCAMP )&&\r\n          <div className=\"flex flex-col mb-4\">\r\n            <label htmlFor=\"emails\" className=\"text-lg font-semibold mb-2\">Enter Emails:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"emails\"\r\n              name=\"emails\"\r\n              value={emails}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className={`p-2 border rounded ${errors.emails ? 'border-red-500' : 'border-black'}`}\r\n            />\r\n            {errors.emails && <span className=\"text-red-500 text-sm\">{errors.emails}</span>}\r\n          </div>\r\n        }\r\n\r\n        {/* Other form fields */}\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"expiration-date\" className=\"text-lg font-semibold mb-2\">Expiration Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"expiration-date\"\r\n            name=\"expiration-date\"\r\n            value={expirationDate}\r\n            min={minDateTime}\r\n            onChange={(e) => setExpirationDate(e.target.value)}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center mb-4\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"is-active\"\r\n            name=\"is-active\"\r\n            checked={isActive}\r\n            onChange={(e) => setIsActive(e.target.checked)}\r\n            className=\"mr-2\"\r\n          />\r\n          <label htmlFor=\"is-active\" className=\"text-lg font-semibold\">Is Active</label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white py-2 px-4 rounded\">Add Promo Code</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromoCodeForm;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n"],"names":["_ref","selectedBootcamp","setSelectedBootcamp","isMulti","isBootcampActive","options","setOptions","useState","url","data","bootcampData","useGet","useEffect","formattedOptions","map","i","label","title","value","id","length","_jsx","Select","className","name","placeholder","onChange","selectedOption","action","bootcamps","setBootcamps","emails","setEmail","promoType","setPromoType","PROMO_TYPES","PARTICULAR_BOOTCAMP","discountType","setDiscountType","DISCOUNT_TYPES","FLAT","discountValue","setDiscountValue","maxDiscount","setMaxDiscount","bootcampId","setBootcampId","expirationDate","setExpirationDate","isActive","setIsActive","errors","setErrors","minDateTime","setMinDateTime","bootcampUrl","useMemo","bootcampIds","bootcamp","join","PARTICULAR_USER_AND_BOOTCAMP","emailList","item","email","minDateTimeString","Date","toISOString","slice","children","_jsxs","onSubmit","e","preventDefault","validationErrors","PARTICULAR_USERS","PERCENTAGE","UPTO_PERCENTAGE","Object","keys","promoData","promo_type","discount_type","discount_value","parseFloat","max_discount","bootcamp_id","expiration_date","is_active","htmlFor","target","entries","_ref2","key","replace","_ref3","type","required","min","disabled","readOnly","ANYONE","BootcampSelect","checked","loading","setLoading","setData","error","setError","fetchData","useCallback","async","params","arguments","undefined","response","axios","get","withCredentials","err"],"sourceRoot":""}