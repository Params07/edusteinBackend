{"version":3,"file":"static/js/637.f9c57684.chunk.js","mappings":"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","sources":["AdminComponents/Components/BootcampSelect.js","AdminComponents/Components/CreateExcelFile.js","AdminComponents/Components/DynamicTable.js","AdminComponents/Components/EmailDrafter.js","AdminComponents/DataComponents/RegistrationData.js","AdminComponents/Hooks/Get.js","AdminComponents/Hooks/UsePost.js","AdminComponents/NavComponents/Registration.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst BootcampSelect = ({ selectedBootcamp, setSelectedBootcamp, isMulti = false,isBootcampActive }) => {\r\n  const [options, setOptions] = useState([]);\r\n  \r\n  \r\n    let url = `/bootcamps/bootcamp?isBootcampActive=${isBootcampActive}`;\r\n  \r\n  \r\n  const { data: bootcampData = [] } = useGet(url);\r\n \r\n  useEffect(() => {\r\n    if (bootcampData) {\r\n      const formattedOptions = bootcampData.map((i) => ({\r\n        label: i.title,\r\n        value: i.id,\r\n      }));\r\n      setOptions(formattedOptions);\r\n      if (!selectedBootcamp && formattedOptions.length > 0 && !isMulti) {\r\n        setSelectedBootcamp(formattedOptions[0]);\r\n      }\r\n    }\r\n  }, [bootcampData, selectedBootcamp, isMulti,isBootcampActive]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedBootcamp(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      className=\"w-64 h-8\"\r\n      name=\"bootcamp\"\r\n      value={selectedBootcamp}\r\n      options={options}\r\n      isMulti={isMulti}\r\n      placeholder=\"Bootcamp Name\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BootcampSelect;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { showPopup } from \"../../Components/Notification\";\r\n\r\nconst useCreateExcelFile = (filename) => {\r\n    const [downloading, setDownloading] = useState(false);\r\n\r\n    const downloadExcelFile = async (data) => {\r\n        try {\r\n            setDownloading(true);\r\n\r\n            const response = await axios.post(`/createExcel`, data, {\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', filename+'.xlsx');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            document.body.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            setDownloading(false);\r\n        } catch (error) {\r\n            setDownloading(false);\r\n            showPopup({ success: false, message: 'Error in downloading file' });\r\n            console.error('Error downloading file:', error);\r\n        }\r\n    };\r\n\r\n    return { downloadExcelFile, downloading };\r\n};\r\n\r\nexport default useCreateExcelFile;\r\n","import React from 'react';\r\n\r\nconst DynamicTable = ({ data, component, action }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  const columns = Object.keys(data[0]);\r\n  const allColumns = ['Action', ...columns];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto m-4\">\r\n      <div className=\"overflow-y-auto h-[500px] no-scrollbar\">\r\n        <table className=\"min-w-full border border-collapse \">\r\n          <thead className=\"bg-gray-300 border-b w-full sticky top-0 z-5 h-16\">\r\n            <tr>\r\n              {allColumns.map((column) => (\r\n                <th className=\"py-2 px-4 border-b border-gray-300 text-center bg-gray-200\" key={column}>\r\n                  {column === 'Action' ? action : column}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr className=\"py-2 px-4 border-b   border-gray-300 text-center\" key={rowIndex}>\r\n                {allColumns.map((column) => {\r\n                  if (column === 'Action') {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-gray-300 border-b text-center\" key={column}>\r\n                        {component(row)}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-gray-300 border-b text-center\" key={column}>\r\n                        {row[column]}\r\n                      </td>\r\n                    );\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n","import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport usePost from '../Hooks/UsePost';\r\n\r\n\r\nconst EmailDrafter = ({ emails, onClose,showPopup }) => {\r\n  const [subject, setSubject] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [errors,setErrors]=useState({})\r\n  const { post, loading, error } = usePost(`/send-email`);\r\n  const [scheduleOption, setScheduleOption] = useState('now'); // 'now' or 'schedule'\r\n  const formatForDateTimeLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  };\r\n  \r\n  const [scheduleDate, setScheduleDate] = useState(formatForDateTimeLocal(new Date()));\r\n  const handleFilesChange = (e) => {\r\n    setFiles(Array.from(e.target.files));\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const newEr = {}\r\n    if ( !content) {\r\n      newEr.content = \"cant send empty email\"\r\n      setErrors(newEr);\r\n      return;\r\n    }\r\n    setErrors(newEr);\r\n    \r\n    setIsSending(true);\r\n    const formData = new FormData();\r\n    formData.append('subject', subject);\r\n    formData.append('message', content);\r\n    formData.append('to', JSON.stringify(emails));\r\n\r\n    files.forEach((file) => {\r\n      formData.append('files', file);\r\n    });\r\n    if (scheduleOption === 'schedule') {\r\n      const now = new Date();\r\n      const scheduledTime = new Date(scheduleDate);\r\n      const offset = 5.5 * 60 * 60 * 1000; \r\n      const scheduledTimeUTC = new Date(scheduledTime.getTime() - offset);\r\n       const delayMs = scheduledTime.getTime() - now.getTime();\r\n      \r\n      \r\n      formData.append('startDelay', delayMs);\r\n      console.log(delayMs)\r\n    }else{\r\n      formData.append('startDelay', 0);\r\n    }\r\n    try {\r\n      await post(formData);\r\n     showPopup({success: true, message: 'email sent' })\r\n      onClose(); \r\n    } catch (error) {\r\n      console.error('Failed to send emails:', error);\r\n      showPopup({success:false, message: 'Couldnt send email' })\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex justify-center items-center\">\r\n      <div className=\"bg-white w-11/12 md:w-2/3 lg:w-1/2 p-4 rounded-lg\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-lg font-bold\">Draft Email</h2>\r\n          <button onClick={onClose} className=\"text-xl font-bold\">&times;</button>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">To:</label>\r\n          <div className=\"border p-2 rounded\">\r\n            {emails.join(', ')}\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Subject:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={subject}\r\n            required\r\n            onChange={(e) => setSubject(e.target.value)}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Body:</label>\r\n          <ReactQuill value={content} onChange={setContent} />\r\n          {errors.content && <p className='text-red-300'> {errors.content}</p>}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Attach Files:</label>\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            onChange={handleFilesChange}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          />\r\n          {files.length > 0 && (\r\n            <div>\r\n              <h3 className=\"font-semibold mt-2\">Selected Files:</h3>\r\n              <ul>\r\n                {files.map((file, index) => (\r\n                  <li key={index}>{file.name}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n       \r\n          <label className=\"block text-sm font-bold mb-2\">Schedule Email:</label>\r\n          <select\r\n            value={scheduleOption}\r\n            onChange={(e) => setScheduleOption(e.target.value)}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          >\r\n            <option value=\"now\">Send Now</option>\r\n            <option value=\"schedule\">Schedule for Later</option>\r\n          </select>\r\n          {scheduleOption === 'schedule' && (\r\n            <div className=\"mt-2\">\r\n              <label className=\"block text-sm font-bold mb-2\">Schedule Date & Time:</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                min={formatForDateTimeLocal(new Date())}\r\n\r\n                value={scheduleDate}\r\n\r\n                onChange={(e) => setScheduleDate(e.target.value)}\r\n                className=\"w-full border border-gray-300 p-2 rounded\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end mt-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded mr-2\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleSend}\r\n            className={`bg-blue-500 text-white px-4 py-2 rounded ${loading || isSending ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n            disabled={loading || isSending}\r\n          >\r\n            {loading || isSending ? 'Sending...' : 'Send'}  \r\n          </button>\r\n        </div>\r\n        {error && <p className=\"text-red-500 mt-2\">Error: {error.message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default EmailDrafter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst RegistrationData = ({ bootcampId }) => {\r\n  const [registrationsData, setRegistrationsData] = useState([]);\r\n  const [shouldFetch, setShouldFetch] = useState(false);\r\n\r\n  const url = bootcampId !== 0 ? `/registrations/registrations?bootcampId=${bootcampId}` : null;\r\n\r\n  const { fetchData, data, loading, error } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (bootcampId !== 0) {\r\n      setShouldFetch(true);\r\n    } else {\r\n      setShouldFetch(false);\r\n    }\r\n  }, [bootcampId]);\r\n\r\n  useEffect(() => {\r\n    if (shouldFetch) {\r\n      fetchData();\r\n    }\r\n  }, [shouldFetch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setRegistrationsData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return registrationsData;\r\n};\r\n\r\nexport default RegistrationData;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst usePost = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const post = async (data) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const isFormData = data instanceof FormData;\r\n      \r\n      const response = await axios.post(url, data, {\r\n        withCredentials: true, \r\n        headers: isFormData ? {\r\n          'Content-Type': 'multipart/form-data',\r\n        } : {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setLoading(false);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err);\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n\r\n  return { post, loading, error };\r\n};\r\n\r\nexport default usePost;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport EmailDrafter from '../Components/EmailDrafter';\r\nimport {  showPopup } from '../../Components/Notification';\r\nimport RegistrationData from '../DataComponents/RegistrationData';\r\nimport DynamicTable from '../Components/DynamicTable';\r\nimport axios from 'axios';\r\nimport useGet from '../Hooks/Get';\r\nimport useCreateExcelFile from '../Components/CreateExcelFile';\r\nimport BootcampSelect from '../Components/BootcampSelect';\r\n\r\n\r\nconst Registration = () => {\r\n  const [bootcamp, setBootCamp] = useState(null);\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedEmail,setSelectedEmails] = useState([])\r\n  const [showEmailDrafter, setShowEmailDrafter] = useState(false);\r\n  const {downloadExcelFile,downloading} = useCreateExcelFile('registration_data');\r\n\r\n  \r\n  \r\n  \r\n\r\n  const registrationsData = RegistrationData({ bootcampId: bootcamp ? bootcamp.value : 0 });\r\n\r\n  useEffect(() => {\r\n    if (selectAll && registrationsData) {\r\n      const ids = registrationsData.map((content) => content.id);\r\n      setSelectedIds(ids);\r\n    } else {\r\n      setSelectedIds([]);\r\n    }\r\n  }, [selectAll]);\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedIds((prevSelectedIds) =>\r\n      prevSelectedIds.includes(id)\r\n        ? prevSelectedIds.filter((selectedId) => selectedId !== id)\r\n        : [...prevSelectedIds, id]\r\n    );\r\n  };\r\n\r\n  const handleSelectAllChange = () => {\r\n    setSelectAll((prevSelectAll) => !prevSelectAll);\r\n  };\r\n  const InitiateEmailDrater=()=>{\r\n    const emails = registrationsData\r\n    .filter((content) => selectedIds.includes(content.id))\r\n    .map((content) => content.email);\r\n    setSelectedEmails(emails)\r\n    setShowEmailDrafter(true)\r\n  }\r\n  const CreateExcelFile = async()=>{\r\n    \r\n    const tempExcelData = registrationsData.filter((content)=>selectedIds.includes(content.id)).map((content)=>content)\r\n   downloadExcelFile(tempExcelData)\r\n   \r\n  }\r\n  return (\r\n    <div className='w-full'>\r\n      <div className='w-full flex items-center justify-between shadow-md py-6 px-4 h-24 mb-6'>\r\n        <p className='text-xl font-bold'>Registrations Data</p>\r\n       \r\n       <BootcampSelect selectedBootcamp={bootcamp} setSelectedBootcamp={setBootCamp}/>\r\n      \r\n      </div>\r\n      <div className='pl-5 pb-3'>\r\n        {selectedIds.length !== 0 && (\r\n          <div className='flex space-x-4'>\r\n            <button className='bg-black px-5 py-2 text-white rounded-md' onClick={() => {InitiateEmailDrater()}}>\r\n            Send Mail\r\n          </button>\r\n          <button disabled={downloading} className='bg-black px-5 py-2 text-white rounded-md' onClick={() => {CreateExcelFile()}}>\r\n          {downloading?'Downloading':'Download'}\r\n        </button>\r\n            </div>\r\n        )}\r\n       \r\n      </div>\r\n     {\r\n      registrationsData &&  <DynamicTable\r\n      data={registrationsData}\r\n      component={(row) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selectedIds.includes(row.id)}\r\n          onChange={() => handleCheckboxChange(row.id)}\r\n        />\r\n      )}\r\n      action={\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selectAll}\r\n          onChange={handleSelectAllChange}\r\n        />\r\n      }\r\n    />\r\n   \r\n     }\r\n      {showEmailDrafter && (\r\n        <EmailDrafter\r\n          emails={selectedEmail}\r\n          onClose={() => setShowEmailDrafter(false)}\r\n          showPopup={showPopup}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"names":["_ref","selectedBootcamp","setSelectedBootcamp","isMulti","isBootcampActive","options","setOptions","useState","url","data","bootcampData","useGet","useEffect","formattedOptions","map","i","label","title","value","id","length","_jsx","Select","className","name","placeholder","onChange","selectedOption","filename","downloading","setDownloading","downloadExcelFile","async","response","axios","post","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","error","showPopup","success","message","console","component","action","children","allColumns","Object","keys","_jsxs","column","row","rowIndex","emails","onClose","subject","setSubject","content","setContent","files","setFiles","isSending","setIsSending","errors","setErrors","loading","usePost","scheduleOption","setScheduleOption","formatForDateTimeLocal","date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","scheduleDate","setScheduleDate","Date","onClick","join","type","required","e","target","ReactQuill","multiple","Array","from","file","index","min","newEr","formData","FormData","append","JSON","stringify","forEach","now","scheduledTime","offset","delayMs","getTime","log","disabled","bootcampId","registrationsData","setRegistrationsData","shouldFetch","setShouldFetch","fetchData","setLoading","setData","setError","useCallback","params","arguments","undefined","get","withCredentials","err","isFormData","headers","Registration","bootcamp","setBootCamp","selectedIds","setSelectedIds","selectAll","setSelectAll","selectedEmail","setSelectedEmails","showEmailDrafter","setShowEmailDrafter","useCreateExcelFile","RegistrationData","ids","BootcampSelect","InitiateEmailDrater","filter","includes","email","tempExcelData","CreateExcelFile","DynamicTable","checked","handleCheckboxChange","prevSelectedIds","selectedId","handleSelectAllChange","prevSelectAll","EmailDrafter"],"sourceRoot":""}