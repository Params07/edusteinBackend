{"version":3,"file":"static/js/498.bf80725d.chunk.js","mappings":"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","sources":["AdminComponents/Components/BootcampSelect.js","AdminComponents/Components/CreateExcelFile.js","AdminComponents/Components/DynamicTable.js","AdminComponents/DataComponents/BootCampData.js","AdminComponents/Hooks/Get.js","AdminComponents/NavComponents/Transaction.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst BootcampSelect = ({ selectedBootcamp, setSelectedBootcamp, isMulti = false,isBootcampActive }) => {\r\n  const [options, setOptions] = useState([]);\r\n  \r\n  \r\n    let url = `/bootcamps/bootcamp?isBootcampActive=${isBootcampActive}`;\r\n  \r\n  \r\n  const { data: bootcampData = [] } = useGet(url);\r\n \r\n  useEffect(() => {\r\n    if (bootcampData) {\r\n      const formattedOptions = bootcampData.map((i) => ({\r\n        label: i.title,\r\n        value: i.id,\r\n      }));\r\n      setOptions(formattedOptions);\r\n      if (!selectedBootcamp && formattedOptions.length > 0 && !isMulti) {\r\n        setSelectedBootcamp(formattedOptions[0]);\r\n      }\r\n    }\r\n  }, [bootcampData, selectedBootcamp, isMulti,isBootcampActive]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedBootcamp(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      className=\"w-64 h-8\"\r\n      name=\"bootcamp\"\r\n      value={selectedBootcamp}\r\n      options={options}\r\n      isMulti={isMulti}\r\n      placeholder=\"Bootcamp Name\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BootcampSelect;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { showPopup } from \"../../Components/Notification\";\r\n\r\nconst useCreateExcelFile = (filename) => {\r\n    const [downloading, setDownloading] = useState(false);\r\n\r\n    const downloadExcelFile = async (data) => {\r\n        try {\r\n            setDownloading(true);\r\n\r\n            const response = await axios.post(`/createExcel`, data, {\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', filename+'.xlsx');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            document.body.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            setDownloading(false);\r\n        } catch (error) {\r\n            setDownloading(false);\r\n            showPopup({ success: false, message: 'Error in downloading file' });\r\n            console.error('Error downloading file:', error);\r\n        }\r\n    };\r\n\r\n    return { downloadExcelFile, downloading };\r\n};\r\n\r\nexport default useCreateExcelFile;\r\n","import React from 'react';\r\n\r\nconst DynamicTable = ({ data, component, action }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  const columns = Object.keys(data[0]);\r\n  const allColumns = ['Action', ...columns];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto m-4\">\r\n      <div className=\"overflow-y-auto h-[500px] no-scrollbar\">\r\n        <table className=\"min-w-full border border-collapse \">\r\n          <thead className=\"bg-gray-300 border-b w-full sticky top-0 z-5 h-16\">\r\n            <tr>\r\n              {allColumns.map((column) => (\r\n                <th className=\"py-2 px-4 border-b border-gray-300 text-center bg-gray-200\" key={column}>\r\n                  {column === 'Action' ? action : column}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr className=\"py-2 px-4 border-b   border-gray-300 text-center\" key={rowIndex}>\r\n                {allColumns.map((column) => {\r\n                  if (column === 'Action') {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-gray-300 border-b text-center\" key={column}>\r\n                        {component(row)}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-gray-300 border-b text-center\" key={column}>\r\n                        {row[column]}\r\n                      </td>\r\n                    );\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n","// BootCampData.js\r\nimport { useEffect, useState } from 'react';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst useBootCampData = (bootcampId) => {\r\n  const [bootcampData, setBootcampData] = useState(null);\r\n  const url = bootcampId !== 0 ? `/bootcamps/bootcampById?id=${bootcampId}` : null;\r\n  const { fetchData, data, loading, error } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetchData();\r\n    }\r\n  }, [url, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBootcampData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return { bootcampData, loading, error };\r\n};\r\n\r\nexport default useBootCampData;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport Select from 'react-select'\r\nimport useGet from '../Hooks/Get';\r\nimport useBootCampData from '../DataComponents/BootCampData';\r\nimport DynamicTable from '../Components/DynamicTable';\r\nimport useCreateExcelFile from '../Components/CreateExcelFile';\r\nimport BootcampSelect from '../Components/BootcampSelect';\r\nconst Transaction = () => {\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [bootcampOption, setBootCampoption] = useState(null);\r\n  const [url, setUrl] = useState('');\r\n  const {downloadExcelFile,downloading} = useCreateExcelFile('transactiondata');\r\n  const transactionStatusOptions = [\r\n    { label: 'Completed', value: 'completed' },\r\n    { label: 'Refund', value: 'refund' },\r\n  ];\r\n\r\n  \r\n  const [currentStatus, setCurrentStatus] = useState(transactionStatusOptions[0]);\r\n\r\n  \r\n\r\n\r\n  \r\n  const memoizedUrl = useMemo(() => {\r\n    return `/transaction/${currentStatus.value}${currentStatus.value !== 'refund' ? `?bootcamp_id=${bootcampOption?.value || 'all'}` : ''}`;\r\n  }, [currentStatus, bootcampOption]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (memoizedUrl !== url) {\r\n      setUrl(memoizedUrl);\r\n    }\r\n  }, [memoizedUrl, url]);\r\n\r\n  const { fetchData, data } = useGet(url);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectAll && data) {\r\n      const ids = data.map(content => content.id);\r\n      setSelectedIds(ids);\r\n    } else {\r\n      setSelectedIds([]);\r\n    }\r\n  }, [selectAll, data]);\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedIds(prevSelectedIds =>\r\n      prevSelectedIds.includes(id)\r\n        ? prevSelectedIds.filter(selectedId => selectedId !== id)\r\n        : [...prevSelectedIds, id]\r\n    );\r\n  };\r\n\r\n  const handleSelectAllChange = () => {\r\n    setSelectAll(prevSelectAll => !prevSelectAll);\r\n  };\r\n  const handleExcel = () =>{\r\n    const tempExcelData = data.filter((content)=>selectedIds.includes(content.id)).map((content)=>content)\r\n   \r\n    downloadExcelFile(tempExcelData);\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className='w-full'>\r\n      <div className='w-full flex items-center justify-between shadow-md py-6 px-4 h-24 mb-6'>\r\n        <p className='text-xl font-bold'>Transaction Data</p>\r\n        <div className='flex space-x-4'>\r\n          <Select\r\n            className='w-64'\r\n            name='transactionStatus'\r\n            value={currentStatus}\r\n            options={transactionStatusOptions}\r\n            required\r\n            placeholder='Select Status'\r\n            onChange={selectedOption => setCurrentStatus(selectedOption)}\r\n          />\r\n          <BootcampSelect selectedBootcamp={bootcampOption} setSelectedBootcamp={setBootCampoption}/>\r\n        </div>\r\n      </div>\r\n      <div className='pl-5 pb-3'>\r\n        {selectedIds.length !== 0 && (\r\n          <div className='flex space-x-4'>\r\n           <button className='py-2 text-white bg-black px-5 rounded-xl' onClick={()=>{handleExcel();}}>Download</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <DynamicTable\r\n        data={data}\r\n        component={row => (\r\n          <input\r\n            type='checkbox'\r\n            checked={selectedIds.includes(row.id)}\r\n            onChange={() => handleCheckboxChange(row.id)}\r\n          />\r\n        )}\r\n        action={\r\n          <input\r\n            type='checkbox'\r\n            checked={selectAll}\r\n            onChange={handleSelectAllChange}\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n"],"names":["_ref","selectedBootcamp","setSelectedBootcamp","isMulti","isBootcampActive","options","setOptions","useState","url","data","bootcampData","useGet","useEffect","formattedOptions","map","i","label","title","value","id","length","_jsx","Select","className","name","placeholder","onChange","selectedOption","filename","downloading","setDownloading","downloadExcelFile","async","response","axios","post","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","error","showPopup","success","message","console","component","action","children","allColumns","Object","keys","_jsxs","column","row","rowIndex","bootcampId","setBootcampData","fetchData","loading","setLoading","setData","setError","useCallback","params","arguments","undefined","get","withCredentials","err","Transaction","selectedIds","setSelectedIds","selectAll","setSelectAll","bootcampOption","setBootCampoption","setUrl","useCreateExcelFile","transactionStatusOptions","currentStatus","setCurrentStatus","memoizedUrl","useMemo","ids","content","required","BootcampSelect","onClick","handleExcel","tempExcelData","filter","includes","DynamicTable","type","checked","handleCheckboxChange","prevSelectedIds","selectedId","handleSelectAllChange","prevSelectAll"],"sourceRoot":""}