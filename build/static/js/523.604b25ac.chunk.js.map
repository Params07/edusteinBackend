{"version":3,"file":"static/js/523.604b25ac.chunk.js","mappings":"kJAGA,MAmCA,EAnCgBA,IACd,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAE7BK,GAAYC,EAAAA,EAAAA,cAAYC,iBAAwB,IAAjBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE7C,GAAKZ,EAAL,CAEAE,GAAW,GACXK,EAAS,MACT,IACE,MAAMQ,QAAiBC,EAAAA,EAAMC,IAAIjB,EAAK,CACpCW,SACAO,iBAAiB,IAEnBb,EAAQU,EAASX,KACnB,CAAE,MAAOe,GACPZ,EAASY,EACX,CAAC,QACCjB,GAAW,EACb,CAdgB,CAelB,GAAG,CAACF,IAUJ,OARAoB,EAAAA,EAAAA,YAAU,KACLpB,GACDQ,GACF,GAGC,CAACA,IAEG,CAAEA,YAAWJ,OAAMH,UAASK,QAAO,C","sources":["AdminComponents/Hooks/Get.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n"],"names":["url","loading","setLoading","useState","data","setData","error","setError","fetchData","useCallback","async","params","arguments","length","undefined","response","axios","get","withCredentials","err","useEffect"],"sourceRoot":""}