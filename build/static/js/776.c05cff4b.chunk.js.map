{"version":3,"file":"static/js/776.c05cff4b.chunk.js","mappings":"sJAIA,MAoBA,EApByBA,IACvB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,MAC3CC,EAAqB,IAAfJ,EAAmB,0BAA0BA,IAAe,MAClE,UAAEK,EAAS,KAAEC,EAAI,QAAEC,EAAO,MAAEC,IAAUC,EAAAA,EAAAA,SAAOL,GAcnD,OAZAM,EAAAA,EAAAA,YAAU,KACJN,GACFC,GACF,GACC,CAACD,EAAKC,KAETK,EAAAA,EAAAA,YAAU,KACJJ,GACFJ,EAAgBI,EAClB,GACC,CAACA,IAEG,CAAEL,eAAcM,UAASC,QAAO,C,0EClBzC,MAmCA,EAnCgBJ,IACd,MAAOG,EAASI,IAAcR,EAAAA,EAAAA,WAAS,IAChCG,EAAMM,IAAWT,EAAAA,EAAAA,UAAS,KAC1BK,EAAOK,IAAYV,EAAAA,EAAAA,UAAS,MAE7BE,GAAYS,EAAAA,EAAAA,cAAYC,iBAAwB,IAAjBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE7C,GAAKb,EAAL,CAEAO,GAAW,GACXE,EAAS,MACT,IACE,MAAMO,QAAiBC,EAAAA,EAAMC,IAAIlB,EAAK,CACpCY,SACAO,iBAAiB,IAEnBX,EAAQQ,EAASd,KACnB,CAAE,MAAOkB,GACPX,EAASW,EACX,CAAC,QACCb,GAAW,EACb,CAdgB,CAelB,GAAG,CAACP,IAUJ,OARAM,EAAAA,EAAAA,YAAU,KACLN,GACDC,GACF,GAGC,CAACA,IAEG,CAAEA,YAAWC,OAAMC,UAASC,QAAO,C","sources":["AdminComponents/DataComponents/BootCampData.js","AdminComponents/Hooks/Get.js"],"sourcesContent":["// BootCampData.js\r\nimport { useEffect, useState } from 'react';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst useBootCampData = (bootcampId) => {\r\n  const [bootcampData, setBootcampData] = useState(null);\r\n  const url = bootcampId !== 0 ? `/bootcamps/bootcamp?id=${bootcampId}` : null;\r\n  const { fetchData, data, loading, error } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetchData();\r\n    }\r\n  }, [url, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBootcampData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return { bootcampData, loading, error };\r\n};\r\n\r\nexport default useBootCampData;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n"],"names":["bootcampId","bootcampData","setBootcampData","useState","url","fetchData","data","loading","error","useGet","useEffect","setLoading","setData","setError","useCallback","async","params","arguments","length","undefined","response","axios","get","withCredentials","err"],"sourceRoot":""}