{"version":3,"file":"static/js/498.5efed6f5.chunk.js","mappings":"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","sources":["AdminComponents/Components/CreateExcelFile.js","AdminComponents/Components/DynamicTable.js","AdminComponents/DataComponents/BootCampData.js","AdminComponents/Hooks/Get.js","AdminComponents/NavComponents/Transaction.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { showPopup } from \"../../Components/Notification\";\r\n\r\nconst useCreateExcelFile = (filename) => {\r\n    const [downloading, setDownloading] = useState(false);\r\n\r\n    const downloadExcelFile = async (data) => {\r\n        try {\r\n            setDownloading(true);\r\n\r\n            const response = await axios.post(`/createExcel`, data, {\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', filename+'.xlsx');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            document.body.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            setDownloading(false);\r\n        } catch (error) {\r\n            setDownloading(false);\r\n            showPopup({ success: false, message: 'Error in downloading file' });\r\n            console.error('Error downloading file:', error);\r\n        }\r\n    };\r\n\r\n    return { downloadExcelFile, downloading };\r\n};\r\n\r\nexport default useCreateExcelFile;\r\n","import React from 'react';\r\n\r\nconst DynamicTable = ({ data, component, action }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  const columns = Object.keys(data[0]);\r\n  const allColumns = ['Action', ...columns];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto m-4\">\r\n      <div className=\"overflow-y-auto h-[500px] no-scrollbar\">\r\n        <table className=\"min-w-full border border-collapse border-gray-200\">\r\n          <thead className=\"bg-gray-100 border-b w-full sticky top-0 z-5 h-16\">\r\n            <tr>\r\n              {allColumns.map((column) => (\r\n                <th className=\"py-2 px-4 border-b text-center bg-gray-100\" key={column}>\r\n                  {column === 'Action' ? action : column}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr className=\"py-2 px-4 border-b text-center\" key={rowIndex}>\r\n                {allColumns.map((column) => {\r\n                  if (column === 'Action') {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {component(row)}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {row[column]}\r\n                      </td>\r\n                    );\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n","// BootCampData.js\r\nimport { useEffect, useState } from 'react';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst useBootCampData = (bootcampId) => {\r\n  const [bootcampData, setBootcampData] = useState(null);\r\n  const url = bootcampId !== 0 ? `/bootcamps/bootcamp?id=${bootcampId}` : null;\r\n  const { fetchData, data, loading, error } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetchData();\r\n    }\r\n  }, [url, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBootcampData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return { bootcampData, loading, error };\r\n};\r\n\r\nexport default useBootCampData;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\nimport useBootCampData from '../DataComponents/BootCampData';\r\nimport DynamicTable from '../Components/DynamicTable';\r\nimport useCreateExcelFile from '../Components/CreateExcelFile';\r\nconst Transaction = () => {\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [bootcampOption, setBootCampoption] = useState(null);\r\n  const [url, setUrl] = useState('');\r\n  const {downloadExcelFile,downloading} = useCreateExcelFile('transactiondata');\r\n  const transactionStatusOptions = [\r\n    { label: 'Completed', value: 'completed' },\r\n    { label: 'Refund', value: 'refund' },\r\n  ];\r\n\r\n  const { data:bootcampData } = useGet(`/bootcamps/bootcamp?id=0`);\r\n  const [currentStatus, setCurrentStatus] = useState(transactionStatusOptions[0]);\r\n\r\n  const formattedOptions = useMemo(() => {\r\n    if (!bootcampData) return [];\r\n    const options = bootcampData.map(i => ({\r\n      label: i.title,\r\n      value: i.id,\r\n    }));\r\n    options.unshift({ label: 'All', value: 'all' });\r\n    return options;\r\n  }, [bootcampData]);\r\n\r\n  useEffect(() => {\r\n    setOptions(formattedOptions);\r\n    setBootCampoption(formattedOptions[0]);\r\n  }, [formattedOptions]);\r\n\r\n  \r\n  const memoizedUrl = useMemo(() => {\r\n    return `/transaction/${currentStatus.value}${currentStatus.value !== 'refund' ? `?bootcamp_id=${bootcampOption?.value || 'all'}` : ''}`;\r\n  }, [currentStatus, bootcampOption]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (memoizedUrl !== url) {\r\n      setUrl(memoizedUrl);\r\n    }\r\n  }, [memoizedUrl, url]);\r\n\r\n  const { fetchData, data } = useGet(url);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectAll && data) {\r\n      const ids = data.map(content => content.id);\r\n      setSelectedIds(ids);\r\n    } else {\r\n      setSelectedIds([]);\r\n    }\r\n  }, [selectAll, data]);\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedIds(prevSelectedIds =>\r\n      prevSelectedIds.includes(id)\r\n        ? prevSelectedIds.filter(selectedId => selectedId !== id)\r\n        : [...prevSelectedIds, id]\r\n    );\r\n  };\r\n\r\n  const handleSelectAllChange = () => {\r\n    setSelectAll(prevSelectAll => !prevSelectAll);\r\n  };\r\n  const handleExcel = () =>{\r\n    const tempExcelData = data.filter((content)=>selectedIds.includes(content.id)).map((content)=>content)\r\n   \r\n    downloadExcelFile(tempExcelData);\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className='w-full'>\r\n      <div className='w-full flex items-center justify-between shadow-md py-6 px-4 h-24 mb-6'>\r\n        <p className='text-xl font-bold'>Transaction Data</p>\r\n        <div className='flex space-x-4'>\r\n          <Select\r\n            className='w-64'\r\n            name='transactionStatus'\r\n            value={currentStatus}\r\n            options={transactionStatusOptions}\r\n            required\r\n            placeholder='Select Status'\r\n            onChange={selectedOption => setCurrentStatus(selectedOption)}\r\n          />\r\n          <Select\r\n            className='w-64'\r\n            name='bootcamp'\r\n            value={bootcampOption}\r\n            options={options}\r\n            required\r\n            isDisabled={currentStatus.value === 'refund'}\r\n            placeholder='Bootcamp Option'\r\n            onChange={selectedOption => setBootCampoption(selectedOption)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='pl-5 pb-3'>\r\n        {selectedIds.length !== 0 && (\r\n          <div className='flex space-x-4'>\r\n           <button className='py-2 text-white bg-black px-5 rounded-xl' onClick={()=>{handleExcel();}}>Download</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <DynamicTable\r\n        data={data}\r\n        component={row => (\r\n          <input\r\n            type='checkbox'\r\n            checked={selectedIds.includes(row.id)}\r\n            onChange={() => handleCheckboxChange(row.id)}\r\n          />\r\n        )}\r\n        action={\r\n          <input\r\n            type='checkbox'\r\n            checked={selectAll}\r\n            onChange={handleSelectAllChange}\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n"],"names":["filename","downloading","setDownloading","useState","downloadExcelFile","async","response","axios","post","data","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","error","showPopup","success","message","console","_ref","component","action","length","_jsx","children","allColumns","Object","keys","className","_jsxs","map","column","row","rowIndex","bootcampId","bootcampData","setBootcampData","fetchData","loading","useGet","useEffect","setLoading","setData","setError","useCallback","params","arguments","undefined","get","withCredentials","err","Transaction","selectedIds","setSelectedIds","selectAll","setSelectAll","options","setOptions","bootcampOption","setBootCampoption","setUrl","useCreateExcelFile","transactionStatusOptions","label","value","currentStatus","setCurrentStatus","formattedOptions","useMemo","i","title","id","unshift","memoizedUrl","ids","content","Select","name","required","placeholder","onChange","selectedOption","isDisabled","onClick","handleExcel","tempExcelData","filter","includes","DynamicTable","type","checked","handleCheckboxChange","prevSelectedIds","selectedId","handleSelectAllChange","prevSelectAll"],"sourceRoot":""}