{"version":3,"file":"static/js/363.b3778d09.chunk.js","mappings":"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","sources":["AdminComponents/Components/DynamicTable.js","AdminComponents/Components/SingleRefund.js","AdminComponents/Hooks/Get.js","AdminComponents/Hooks/UsePost.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DynamicTable = ({ data, component, action }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  const columns = Object.keys(data[0]);\r\n  const allColumns = ['Action', ...columns];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto m-4\">\r\n      <div className=\"overflow-y-auto h-[500px] no-scrollbar\">\r\n        <table className=\"min-w-full border border-collapse border-gray-200\">\r\n          <thead className=\"bg-gray-100 border-b w-full sticky top-0 z-5 h-16\">\r\n            <tr>\r\n              {allColumns.map((column) => (\r\n                <th className=\"py-2 px-4 border-b text-center bg-gray-100\" key={column}>\r\n                  {column === 'Action' ? action : column}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr className=\"py-2 px-4 border-b text-center\" key={rowIndex}>\r\n                {allColumns.map((column) => {\r\n                  if (column === 'Action') {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {component(row)}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {row[column]}\r\n                      </td>\r\n                    );\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n","\r\nimport DynamicTable from '../Components/DynamicTable';\r\nimport { showPopup } from '../../Components/Notification';\r\nimport usePost from '../Hooks/UsePost';\r\nimport React, { useState, useEffect,useMemo, Suspense } from 'react';\r\nimport useGet from '../Hooks/Get';\r\nconst SingleRefund = () => {\r\n    \r\n    const [razorPayID, setRazorPayID] = useState('');\r\n    const [razorPaydata,setRazorPaydata] = useState('')\r\n    const [details,setdetails]=useState();\r\n    const [isInvalid,setInvalid]=useState(false)\r\n    const {post,loading:refundPostLoading,error:refundPostError} = usePost(`/refundInitiator/refundInitiate`)\r\n\r\n  \r\n  const checkurl = useMemo(()=>{\r\n    if(razorPaydata.trim() == \"\"){\r\n        return null\r\n    }\r\n  \r\n      \r\n    return `/refundInitiator/checkData?razorPayID=${razorPayID}`\r\n  },[razorPaydata])\r\n  console.log(checkurl)\r\n  const { data, loading, error } = useGet(checkurl);\r\n  \r\n  const handleCheck =  () => {\r\n    if (!razorPayID) {\r\n      return;\r\n    }\r\n    \r\n    setRazorPaydata(razorPayID);\r\n   \r\n   \r\n    \r\n  };\r\n \r\n const initiateRefund =async()=>{\r\n  const formData = new FormData();\r\n    console.log(details[0].paymentid)\r\n    formData.append('name', details[0].name || '');\r\n    formData.append('id', details[0].id || '');\r\n    formData.append('phone', details[0].phone || '');\r\n    formData.append('email', details[0].email || '');\r\n    formData.append('razorPayID', details[0].paymentid || '');\r\n  try {\r\n    const result = await post(formData);\r\n    showPopup({success:true,message:result.message})\r\n  } catch (error) {\r\n    console.log(error)\r\n    const errorMessage = (error.response && error.response.data && error.response.data.message)\r\n      ? error.response.data.message\r\n      : 'An unknown error occurred';\r\n\r\n    showPopup({ success: false, message: errorMessage });\r\n  }\r\n }\r\n const renderAction = ()=>{\r\n  return (\r\n    <button className='px-5 py-2 text-white bg-green-600 rounded-md' disabled={refundPostLoading} onClick={()=>initiateRefund()}>Initiate Refund</button>\r\n  )\r\n }\r\n  useEffect(() => {\r\n   \r\n    if (data && data.length>0) {\r\n      setInvalid(false)\r\n     setdetails(data)\r\n    }else{\r\n   setInvalid(true)\r\n   setdetails([])\r\n   setRazorPaydata('')\r\n    }\r\n   \r\n  }, [data]);\r\n  useEffect(()=>{\r\n    setdetails([])\r\n  },[error])\r\n  return (\r\n    <div>\r\n         <div className=\"flex space-x-4 items-center\">\r\n          <label className=\"text-lg font-semibold\">Payment ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={razorPayID}\r\n            onChange={(e) => setRazorPayID(e.target.value)}\r\n            required\r\n            className=\"px-5 py-2 border-2 border-gray-400 outline-none focus:border-2 focus:border-gray-500 rounded-md\"\r\n            placeholder=\"Enter the payment ID\"\r\n          />\r\n          <button\r\n            className=\"px-5 py-2 bg-black hover:bg-gray-700 text-white rounded-md border-2 border-black\"\r\n            onClick={handleCheck}\r\n          >\r\n            Check Valid\r\n          </button>\r\n          {\r\n            isInvalid?<p></p>:''\r\n          }\r\n        </div>\r\n        \r\n        {loading && <p>Loading...</p>}\r\n       \r\n        {details && details.length > 0 && (\r\n          <DynamicTable data={details} component={renderAction} action={'Action'} />\r\n        )}\r\n        {\r\n          isInvalid  && razorPaydata && <>no matching data found</>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleRefund","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst usePost = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const post = async (data) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const isFormData = data instanceof FormData;\r\n      console.log(isFormData)\r\n      const response = await axios.post(url, data, {\r\n        withCredentials: true, \r\n        headers: isFormData ? {\r\n          'Content-Type': 'multipart/form-data',\r\n        } : {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setLoading(false);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err);\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n\r\n  return { post, loading, error };\r\n};\r\n\r\nexport default usePost;\r\n"],"names":["_ref","data","component","action","length","_jsx","children","allColumns","Object","keys","className","_jsxs","map","column","row","rowIndex","SingleRefund","razorPayID","setRazorPayID","useState","razorPaydata","setRazorPaydata","details","setdetails","isInvalid","setInvalid","post","loading","refundPostLoading","error","refundPostError","usePost","checkurl","useMemo","trim","console","log","useGet","useEffect","type","value","onChange","e","target","required","placeholder","onClick","handleCheck","DynamicTable","renderAction","disabled","async","formData","FormData","paymentid","append","name","id","phone","email","result","showPopup","success","message","errorMessage","response","initiateRefund","_Fragment","url","setLoading","setData","setError","fetchData","useCallback","params","arguments","undefined","axios","get","withCredentials","err","isFormData","headers"],"sourceRoot":""}