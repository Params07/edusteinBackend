{"version":3,"file":"static/js/498.ddd260f1.chunk.js","mappings":"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","sources":["AdminComponents/Components/BootcampSelect.js","AdminComponents/Components/CreateExcelFile.js","AdminComponents/Components/DynamicTable.js","AdminComponents/DataComponents/BootCampData.js","AdminComponents/Hooks/Get.js","AdminComponents/NavComponents/Transaction.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst BootcampSelect = ({ selectedBootcamp, setSelectedBootcamp, isMulti = false }) => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const url = `/bootcamps/bootcamp?id=0`;\r\n  const { data: bootcampData = [] } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (bootcampData) {\r\n      const formattedOptions = bootcampData.map((i) => ({\r\n        label: i.title,\r\n        value: i.id,\r\n      }));\r\n      setOptions(formattedOptions);\r\n      if (!selectedBootcamp && formattedOptions.length > 0 && !isMulti) {\r\n        setSelectedBootcamp(formattedOptions[0]);\r\n      }\r\n    }\r\n  }, [bootcampData, selectedBootcamp, isMulti]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedBootcamp(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      className=\"w-64 h-8\"\r\n      name=\"bootcamp\"\r\n      value={selectedBootcamp}\r\n      options={options}\r\n      isMulti={isMulti}\r\n      placeholder=\"Bootcamp Name\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BootcampSelect;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { showPopup } from \"../../Components/Notification\";\r\n\r\nconst useCreateExcelFile = (filename) => {\r\n    const [downloading, setDownloading] = useState(false);\r\n\r\n    const downloadExcelFile = async (data) => {\r\n        try {\r\n            setDownloading(true);\r\n\r\n            const response = await axios.post(`/createExcel`, data, {\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', filename+'.xlsx');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            document.body.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            setDownloading(false);\r\n        } catch (error) {\r\n            setDownloading(false);\r\n            showPopup({ success: false, message: 'Error in downloading file' });\r\n            console.error('Error downloading file:', error);\r\n        }\r\n    };\r\n\r\n    return { downloadExcelFile, downloading };\r\n};\r\n\r\nexport default useCreateExcelFile;\r\n","import React from 'react';\r\n\r\nconst DynamicTable = ({ data, component, action }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  const columns = Object.keys(data[0]);\r\n  const allColumns = ['Action', ...columns];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto m-4\">\r\n      <div className=\"overflow-y-auto h-[500px] no-scrollbar\">\r\n        <table className=\"min-w-full border border-collapse border-gray-200\">\r\n          <thead className=\"bg-gray-100 border-b w-full sticky top-0 z-5 h-16\">\r\n            <tr>\r\n              {allColumns.map((column) => (\r\n                <th className=\"py-2 px-4 border-b text-center bg-gray-100\" key={column}>\r\n                  {column === 'Action' ? action : column}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr className=\"py-2 px-4 border-b text-center\" key={rowIndex}>\r\n                {allColumns.map((column) => {\r\n                  if (column === 'Action') {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {component(row)}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {row[column]}\r\n                      </td>\r\n                    );\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n","// BootCampData.js\r\nimport { useEffect, useState } from 'react';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst useBootCampData = (bootcampId) => {\r\n  const [bootcampData, setBootcampData] = useState(null);\r\n  const url = bootcampId !== 0 ? `/bootcamps/bootcamp?id=${bootcampId}` : null;\r\n  const { fetchData, data, loading, error } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetchData();\r\n    }\r\n  }, [url, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBootcampData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return { bootcampData, loading, error };\r\n};\r\n\r\nexport default useBootCampData;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport Select from 'react-select'\r\nimport useGet from '../Hooks/Get';\r\nimport useBootCampData from '../DataComponents/BootCampData';\r\nimport DynamicTable from '../Components/DynamicTable';\r\nimport useCreateExcelFile from '../Components/CreateExcelFile';\r\nimport BootcampSelect from '../Components/BootcampSelect';\r\nconst Transaction = () => {\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [bootcampOption, setBootCampoption] = useState(null);\r\n  const [url, setUrl] = useState('');\r\n  const {downloadExcelFile,downloading} = useCreateExcelFile('transactiondata');\r\n  const transactionStatusOptions = [\r\n    { label: 'Completed', value: 'completed' },\r\n    { label: 'Refund', value: 'refund' },\r\n  ];\r\n\r\n  \r\n  const [currentStatus, setCurrentStatus] = useState(transactionStatusOptions[0]);\r\n\r\n  \r\n\r\n\r\n  \r\n  const memoizedUrl = useMemo(() => {\r\n    return `/transaction/${currentStatus.value}${currentStatus.value !== 'refund' ? `?bootcamp_id=${bootcampOption?.value || 'all'}` : ''}`;\r\n  }, [currentStatus, bootcampOption]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (memoizedUrl !== url) {\r\n      setUrl(memoizedUrl);\r\n    }\r\n  }, [memoizedUrl, url]);\r\n\r\n  const { fetchData, data } = useGet(url);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectAll && data) {\r\n      const ids = data.map(content => content.id);\r\n      setSelectedIds(ids);\r\n    } else {\r\n      setSelectedIds([]);\r\n    }\r\n  }, [selectAll, data]);\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedIds(prevSelectedIds =>\r\n      prevSelectedIds.includes(id)\r\n        ? prevSelectedIds.filter(selectedId => selectedId !== id)\r\n        : [...prevSelectedIds, id]\r\n    );\r\n  };\r\n\r\n  const handleSelectAllChange = () => {\r\n    setSelectAll(prevSelectAll => !prevSelectAll);\r\n  };\r\n  const handleExcel = () =>{\r\n    const tempExcelData = data.filter((content)=>selectedIds.includes(content.id)).map((content)=>content)\r\n   \r\n    downloadExcelFile(tempExcelData);\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className='w-full'>\r\n      <div className='w-full flex items-center justify-between shadow-md py-6 px-4 h-24 mb-6'>\r\n        <p className='text-xl font-bold'>Transaction Data</p>\r\n        <div className='flex space-x-4'>\r\n          <Select\r\n            className='w-64'\r\n            name='transactionStatus'\r\n            value={currentStatus}\r\n            options={transactionStatusOptions}\r\n            required\r\n            placeholder='Select Status'\r\n            onChange={selectedOption => setCurrentStatus(selectedOption)}\r\n          />\r\n          <BootcampSelect selectedBootcamp={bootcampOption} setSelectedBootcamp={setBootCampoption}/>\r\n        </div>\r\n      </div>\r\n      <div className='pl-5 pb-3'>\r\n        {selectedIds.length !== 0 && (\r\n          <div className='flex space-x-4'>\r\n           <button className='py-2 text-white bg-black px-5 rounded-xl' onClick={()=>{handleExcel();}}>Download</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <DynamicTable\r\n        data={data}\r\n        component={row => (\r\n          <input\r\n            type='checkbox'\r\n            checked={selectedIds.includes(row.id)}\r\n            onChange={() => handleCheckboxChange(row.id)}\r\n          />\r\n        )}\r\n        action={\r\n          <input\r\n            type='checkbox'\r\n            checked={selectAll}\r\n            onChange={handleSelectAllChange}\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n"],"names":["_ref","selectedBootcamp","setSelectedBootcamp","isMulti","options","setOptions","useState","data","bootcampData","useGet","useEffect","formattedOptions","map","i","label","title","value","id","length","_jsx","Select","className","name","placeholder","onChange","selectedOption","filename","downloading","setDownloading","downloadExcelFile","async","response","axios","post","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","error","showPopup","success","message","console","component","action","children","allColumns","Object","keys","_jsxs","column","row","rowIndex","bootcampId","setBootcampData","fetchData","loading","setLoading","setData","setError","useCallback","params","arguments","undefined","get","withCredentials","err","Transaction","selectedIds","setSelectedIds","selectAll","setSelectAll","bootcampOption","setBootCampoption","setUrl","useCreateExcelFile","transactionStatusOptions","currentStatus","setCurrentStatus","memoizedUrl","useMemo","ids","content","required","BootcampSelect","onClick","handleExcel","tempExcelData","filter","includes","DynamicTable","type","checked","handleCheckboxChange","prevSelectedIds","selectedId","handleSelectAllChange","prevSelectAll"],"sourceRoot":""}