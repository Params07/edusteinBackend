{"version":3,"file":"static/js/823.f018d936.chunk.js","mappings":"4LAIA,MAoCA,EApCuBA,IAAiE,IAAhE,iBAAEC,EAAgB,oBAAEC,EAAmB,QAAEC,GAAU,GAAOH,EAChF,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAG/BC,KAAMC,EAAe,KAAOC,EAAAA,EAAAA,SADxB,6BAGZC,EAAAA,EAAAA,YAAU,KACR,GAAIF,EAAc,CAChB,MAAMG,EAAmBH,EAAaI,KAAKC,IAAC,CAC1CC,MAAOD,EAAEE,MACTC,MAAOH,EAAEI,OAEXZ,EAAWM,IACNV,GAAoBU,EAAiBO,OAAS,IAAMf,GACvDD,EAAoBS,EAAiB,GAEzC,IACC,CAACH,EAAcP,EAAkBE,IAMpC,OACEgB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,UAAU,WACVC,KAAK,WACLN,MAAOf,EACPG,QAASA,EACTD,QAASA,EACToB,YAAY,gBACZC,SAZkBC,IACpBvB,EAAoBuB,EAAe,GAYjC,C,qFChCN,MAgCA,EAhC4BC,IACxB,MAAOC,EAAaC,IAAkBtB,EAAAA,EAAAA,WAAS,GA4B/C,MAAO,CAAEuB,kBA1BiBC,UACtB,IACIF,GAAe,GAEf,MAAMG,QAAiBC,EAAAA,EAAMC,KAAK,eAAgB1B,EAAM,CACpD2B,aAAc,SAGZC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACR,EAASxB,QACpDiC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOR,EACZK,EAAKI,aAAa,WAAYlB,EAAS,SACvCe,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QAELN,SAASI,KAAKG,YAAYR,GAC1BJ,OAAOC,IAAIY,gBAAgBd,GAE3BP,GAAe,EACnB,CAAE,MAAOsB,GACLtB,GAAe,IACfuB,EAAAA,EAAAA,GAAU,CAAEC,SAAS,EAAOC,QAAS,8BACrCC,QAAQJ,MAAM,0BAA2BA,EAC7C,GAGwBvB,cAAa,C,wEC/B7C,MAgDA,EAhDqB3B,IAAkC,IAAjC,KAAEO,EAAI,UAAEgD,EAAS,OAAEC,GAAQxD,EAC/C,IAAKO,GAAwB,IAAhBA,EAAKW,OAChB,OAAOC,EAAAA,EAAAA,KAAA,KAAAsC,SAAG,sBAGZ,MACMC,EAAa,CAAC,YADJC,OAAOC,KAAKrD,EAAK,KAGjC,OACEY,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sBAAqBoC,UAClCtC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,yCAAwCoC,UACrDI,EAAAA,EAAAA,MAAA,SAAOxC,UAAU,oDAAmDoC,SAAA,EAClEtC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,oDAAmDoC,UAClEtC,EAAAA,EAAAA,KAAA,MAAAsC,SACGC,EAAW9C,KAAKkD,IACf3C,EAAAA,EAAAA,KAAA,MAAIE,UAAU,6CAA4CoC,SAC5C,WAAXK,EAAsBN,EAASM,GAD8BA,UAMtE3C,EAAAA,EAAAA,KAAA,SAAAsC,SACGlD,EAAKK,KAAI,CAACmD,EAAKC,KACd7C,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iCAAgCoC,SAC3CC,EAAW9C,KAAKkD,GACA,WAAXA,GAEA3C,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iCAAgCoC,SAC3CF,EAAUQ,IADuCD,IAMpD3C,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iCAAgCoC,SAC3CM,EAAID,IAD6CA,MAVRE,aAqBxD,C,uJCrCV,MAwJA,EAxJuBC,KACrB,MAAOC,EAAWC,IAAgB7D,EAAAA,EAAAA,UAAS,KACpCE,EAAc4D,IAAmB9D,EAAAA,EAAAA,UAAS,KAC1C+D,EAASC,IAAchE,EAAAA,EAAAA,WAAS,IAChC4C,EAAOqB,IAAYjE,EAAAA,EAAAA,UAAS,OAC5BkE,EAAaC,IAAiBnE,EAAAA,EAAAA,UAAS,IACvCoE,EAAaC,IAAkBrE,EAAAA,EAAAA,UAAS,KACxCsE,EAAWC,IAAgBvE,EAAAA,EAAAA,WAAS,IACpCwE,EAAiBC,IAAUzE,EAAAA,EAAAA,UAAS,IACpC8C,EAAQ4B,IAAc1E,EAAAA,EAAAA,UAAS,IAChC,kBAACuB,EAAiB,YAACF,IAAesD,EAAAA,EAAAA,SAAmB,mBACpDC,EAAiBC,IAAuB7E,EAAAA,EAAAA,UAAS,IAClD8E,GAAcC,EAAAA,EAAAA,UAAQ,KAE1B,GADAN,EAAO,GACJb,EAAUhD,OAAQ,EACjB,OAAO,KAGX,MAAO,wCADWgD,EAAUtD,KAAI0E,GAAYA,EAAStE,QAAOuE,KAAK,MACL,GAC5D,CAACf,KAEG,KAAEjE,EAAM8D,QAASmB,EAActC,MAAOuC,IAAehF,EAAAA,EAAAA,SAAO2E,IAC5D,KAACnD,EAAKoC,QAAQqB,EAAkBxC,MAAMyC,IAAmBC,EAAAA,EAAAA,SAAQ,uCAIvElF,EAAAA,EAAAA,YAAU,KAER,GADAqE,EAAO,GACHH,GAAapE,EAAc,CAC7B,MAAMqF,EAAMrF,EAAaI,KAAKkF,GAAYA,EAAQ7E,KAClD0D,EAAekB,EACjB,MACElB,EAAe,GACjB,GACC,CAACC,KACJlE,EAAAA,EAAAA,YAAU,KACRyE,EAAoB,IACpBN,GAAa,GACTtE,IACF6D,EAAgB7D,GAChB+D,EAAWkB,GACXjB,EAASkB,GACX,GACC,CAAClF,EAAMiF,EAAcC,IAyCxB,OACE5B,EAAAA,EAAAA,MAAA,OAAKxC,UAAU,0BAAyBoC,SAAA,EACtCI,EAAAA,EAAAA,MAAA,OAAKxC,UAAU,6BAA4BoC,SAAA,EAC/CtC,EAAAA,EAAAA,KAAC4E,EAAAA,QAAc,CAAC9F,iBAAkBiE,EAAWhE,oBAAqBiE,EAAchE,SAAS,KAEzFgB,EAAAA,EAAAA,KAAA,UACEE,UAAW,qEAAoEgD,EAAU,gCAAkC,IAC3H2B,QAASA,IAAMvB,EAAgBD,EAAe,GAC9CyB,SAAU5B,EAAQZ,SAEjBY,EAAU,WAAa,eAGzBK,GAAeA,EAAYxD,OAAS,IACnCC,EAAAA,EAAAA,KAAA,UACEE,UAAU,yFACV2E,QAASA,IA/CYlE,WACvBiD,EAAO,GACP,MAAMmB,EAAe1F,EAAa2F,QAAQL,GACtCpB,EAAY0B,SAASN,EAAQ7E,MAC/BL,KAAKkF,IAAO,IAAQA,EAASO,WAAWP,EAAQQ,cAClD,GAAGJ,EAAYhF,OAAS,EAAE,CACtBoC,QAAQiD,IAAIL,GACZ,IACI,MAAMM,QAAevE,EAAK,CAACiE,iBACrB,QAACO,GAASD,EAChBlD,QAAQiD,IAAIE,GACZ,MAAMC,EAAcD,EAAQE,QAAO,CAACC,EAAIC,IAAOC,OAAOF,GAAKE,OAAsB,WAAfD,EAAKE,OAAoB,EAAE,IAAG,GAChG/B,EAAW0B,GACX3B,EAAO0B,EAAQvF,QACfiE,EAAoBsB,EAGxB,CAAE,MAAOvD,IACLC,EAAAA,EAAAA,GAAU,CAACC,SAAQ,EAAMC,QAAQ,qBACjCC,QAAQiD,IAAIrD,GACZ6B,EAAO,GACPI,EAAoB,GACxB,CACJ,GAwBiB6B,GACff,SAAUP,EAAkBjC,SAE3BiC,EAAoB,YAAc,eAIjB,IAArBZ,IACCjB,EAAAA,EAAAA,MAAA,OAAKxC,UAAU,iCAAgCoC,SAAA,EAC7CI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,8BAA4BqB,MAC/BjB,EAAAA,EAAAA,MAAA,KAAGxC,UAAU,iBAAgBoC,SAAA,EAC3BI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,8BAA4BL,MAC9BjC,EAAAA,EAAAA,KAAC8F,EAAAA,IAAM,CAAC5F,UAAU,+BAErBwC,EAAAA,EAAAA,MAAA,KAAGxC,UAAU,mCAAkCoC,SAAA,EAC7CI,EAAAA,EAAAA,MAAA,KAAGxC,UAAU,GAAEoC,SAAA,CAAC,6BAA2BqB,EAAmB1B,MAC9DjC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sCAAqCoC,SAAC,YAKvDyB,GAAoBA,EAAiBhE,OAAS,IAC9CC,EAAAA,EAAAA,KAAA,UACCE,UAAU,sEAAsE4E,SAAUtE,EAC1FqE,QAASlE,UAAUD,EAAkBqD,EAAiB,EAAEzB,SAAC,wBAG9DtC,EAAAA,EAAAA,KAAA,OAAAsC,SAEQjD,GAAgBA,EAAaU,OAAS,IAAKC,EAAAA,EAAAA,KAAC+F,EAAAA,QAAY,CAAC3G,KAAMC,EAAe+C,UAAYQ,IACtF5C,EAAAA,EAAAA,KAAA,SACEE,UAAU,iBACV8F,KAAK,WACLC,QAAS1C,EAAY0B,SAASrC,EAAI9C,IAClCO,SAAUA,KAAM6F,OAzFEpG,EAyFmB8C,EAAI9C,GAxFnD8D,EAAO,QACPJ,GAAgB2C,GACdA,EAAgBlB,SAASnF,GACrBqG,EAAgBnB,QAAQoB,GAAeA,IAAetG,IACtD,IAAIqG,EAAiBrG,KALCA,KAyF2B,IAGjDuC,QACErC,EAAAA,EAAAA,KAAA,SACEgG,KAAK,WACLC,QAASxC,EACTpD,SA9DkBgG,KAC5BzC,EAAO,GACPI,EAAoB,IACpBN,GAAc4C,IAAmBA,GAAc,UAkEzC,C,0EC1JV,MAmCA,EAnCgBtF,IACd,MAAOkC,EAASC,IAAchE,EAAAA,EAAAA,WAAS,IAChCC,EAAMmH,IAAWpH,EAAAA,EAAAA,UAAS,KAC1B4C,EAAOqB,IAAYjE,EAAAA,EAAAA,UAAS,MAE7BqH,GAAYC,EAAAA,EAAAA,cAAY9F,iBAAwB,IAAjB+F,EAAMC,UAAA5G,OAAA,QAAA6G,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE7C,GAAK3F,EAAL,CAEAmC,GAAW,GACXC,EAAS,MACT,IACE,MAAMxC,QAAiBC,EAAAA,EAAMgG,IAAI7F,EAAK,CACpC0F,SACAI,iBAAiB,IAEnBP,EAAQ3F,EAASxB,KACnB,CAAE,MAAO2H,GACP3D,EAAS2D,EACX,CAAC,QACC5D,GAAW,EACb,CAdgB,CAelB,GAAG,CAACnC,IAUJ,OARAzB,EAAAA,EAAAA,YAAU,KACLyB,GACDwF,GACF,GAGC,CAACA,IAEG,CAAEA,YAAWpH,OAAM8D,UAASnB,QAAO,C,0EChC5C,MA+BA,EA/BiBf,IACf,MAAOkC,EAASC,IAAchE,EAAAA,EAAAA,WAAS,IAChC4C,EAAOqB,IAAYjE,EAAAA,EAAAA,UAAS,MA0BnC,MAAO,CAAE2B,KAxBIH,UACXwC,GAAW,GACXC,EAAS,MACT,IACE,MAAM4D,EAAa5H,aAAgB6H,SACnC9E,QAAQiD,IAAI4B,GACZ,MAAMpG,QAAiBC,EAAAA,EAAMC,KAAKE,EAAK5B,EAAM,CAC3C0H,iBAAiB,EACjBI,QAASF,EAAa,CACpB,eAAgB,uBACd,CACF,eAAgB,sBAIpB,OADA7D,GAAW,GACJvC,EAASxB,IAClB,CAAE,MAAO2H,GAGP,MAFA3D,EAAS2D,GACT5D,GAAW,GACL4D,CACR,GAIa7D,UAASnB,QAAO,C","sources":["AdminComponents/Components/BootcampSelect.js","AdminComponents/Components/CreateExcelFile.js","AdminComponents/Components/DynamicTable.js","AdminComponents/Components/MultipleRefund.js","AdminComponents/Hooks/Get.js","AdminComponents/Hooks/UsePost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst BootcampSelect = ({ selectedBootcamp, setSelectedBootcamp, isMulti = false }) => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const url = `/bootcamps/bootcamp?id=0`;\r\n  const { data: bootcampData = [] } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (bootcampData) {\r\n      const formattedOptions = bootcampData.map((i) => ({\r\n        label: i.title,\r\n        value: i.id,\r\n      }));\r\n      setOptions(formattedOptions);\r\n      if (!selectedBootcamp && formattedOptions.length > 0 && !isMulti) {\r\n        setSelectedBootcamp(formattedOptions[0]);\r\n      }\r\n    }\r\n  }, [bootcampData, selectedBootcamp, isMulti]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedBootcamp(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      className=\"w-64 h-8\"\r\n      name=\"bootcamp\"\r\n      value={selectedBootcamp}\r\n      options={options}\r\n      isMulti={isMulti}\r\n      placeholder=\"Bootcamp Name\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BootcampSelect;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { showPopup } from \"../../Components/Notification\";\r\n\r\nconst useCreateExcelFile = (filename) => {\r\n    const [downloading, setDownloading] = useState(false);\r\n\r\n    const downloadExcelFile = async (data) => {\r\n        try {\r\n            setDownloading(true);\r\n\r\n            const response = await axios.post(`/createExcel`, data, {\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', filename+'.xlsx');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            document.body.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            setDownloading(false);\r\n        } catch (error) {\r\n            setDownloading(false);\r\n            showPopup({ success: false, message: 'Error in downloading file' });\r\n            console.error('Error downloading file:', error);\r\n        }\r\n    };\r\n\r\n    return { downloadExcelFile, downloading };\r\n};\r\n\r\nexport default useCreateExcelFile;\r\n","import React from 'react';\r\n\r\nconst DynamicTable = ({ data, component, action }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  const columns = Object.keys(data[0]);\r\n  const allColumns = ['Action', ...columns];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto m-4\">\r\n      <div className=\"overflow-y-auto h-[500px] no-scrollbar\">\r\n        <table className=\"min-w-full border border-collapse border-gray-200\">\r\n          <thead className=\"bg-gray-100 border-b w-full sticky top-0 z-5 h-16\">\r\n            <tr>\r\n              {allColumns.map((column) => (\r\n                <th className=\"py-2 px-4 border-b text-center bg-gray-100\" key={column}>\r\n                  {column === 'Action' ? action : column}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr className=\"py-2 px-4 border-b text-center\" key={rowIndex}>\r\n                {allColumns.map((column) => {\r\n                  if (column === 'Action') {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {component(row)}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {row[column]}\r\n                      </td>\r\n                    );\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\nimport BootcampSelect from './BootcampSelect';\r\nimport DynamicTable from './DynamicTable';\r\nimport usePost from '../Hooks/UsePost';\r\nimport { showPopup } from '../../Components/Notification';\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport useCreateExcelFile from './CreateExcelFile';\r\nconst MultipleRefund = () => {\r\n  const [bootcamps, setBootcamps] = useState([]);\r\n  const [bootcampData, setBootcampData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [fetchTrigger,setFetchTrigger]=useState(0)\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [requestedRefunds,setReq] = useState(0)\r\n  const [success,setsuccess] = useState(0)\r\n  const {downloadExcelFile,downloading} = useCreateExcelFile('refundAll_data');\r\n  const [refundStatusData,setRefundStatusData] = useState([])\r\n  const bootcampUrl = useMemo(()=>{\r\n    setReq(0)\r\n    if(bootcamps.length <1){\r\n        return null\r\n    }\r\n   const bootcampIds= bootcamps.map(bootcamp => bootcamp.value).join(',')\r\n    return `/refundInitiator/getData?bootcampIds=${bootcampIds}`\r\n  },[fetchTrigger])\r\n\r\n  const { data, loading: fetchLoading, error: fetchError } = useGet(bootcampUrl);\r\n  const {post,loading:refundPostLoading,error:refundPostError} = usePost(`/refundInitiator/refundInitiateAll`)\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    setReq(0)\r\n    if (selectAll && bootcampData) {\r\n      const ids = bootcampData.map((content) => content.id);\r\n      setSelectedIds(ids);\r\n    } else {\r\n      setSelectedIds([]);\r\n    }\r\n  }, [selectAll]);\r\n  useEffect(() => {\r\n    setRefundStatusData([])\r\n    setSelectAll(false)\r\n    if (data) {\r\n      setBootcampData(data);\r\n      setLoading(fetchLoading);\r\n      setError(fetchError);\r\n    }\r\n  }, [data, fetchLoading, fetchError]);\r\n \r\n  const handleCheckboxChange = (id) => {\r\n    setReq(0)\r\n    setSelectedIds((prevSelectedIds) =>\r\n      prevSelectedIds.includes(id)\r\n        ? prevSelectedIds.filter((selectedId) => selectedId !== id)\r\n        : [...prevSelectedIds, id]\r\n    );\r\n  };\r\n  const initiateRefundAll =async()=>{\r\n    setReq(0)\r\n    const userDetails  = bootcampData.filter((content)=>\r\n        selectedIds.includes(content.id)\r\n    ).map((content)=>({...content ,razorPayID:content.paymentid}))\r\n    if(userDetails.length > 0){\r\n        console.log(userDetails)\r\n        try {\r\n            const output = await post({userDetails});\r\n            const {results}=output;\r\n            console.log(results)\r\n            const noOfsuccess = results.reduce((acc,item)=>Number(acc)+Number(item.status == 'success'?1:0),0);\r\n            setsuccess(noOfsuccess);\r\n            setReq(results.length);\r\n            setRefundStatusData(results)\r\n\r\n\r\n        } catch (error) {\r\n            showPopup({success:false,message:'an error occured'})\r\n            console.log(error)\r\n            setReq(0)\r\n            setRefundStatusData([])\r\n        }\r\n    }\r\n  }\r\n \r\n  const handleSelectAllChange = () => {\r\n    setReq(0)\r\n    setRefundStatusData([])\r\n    setSelectAll((prevSelectAll) => !prevSelectAll);\r\n  };\r\n  return (\r\n    <div className='flex flex-col space-y-8'>\r\n      <div className='flex space-x-4 items-start'>\r\n  <BootcampSelect selectedBootcamp={bootcamps} setSelectedBootcamp={setBootcamps} isMulti={true} />\r\n\r\n  <button\r\n    className={`px-5 py-2 bg-black text-white rounded border-2 hover:bg-gray-700 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n    onClick={() => setFetchTrigger(fetchTrigger + 1)} \r\n    disabled={loading}\r\n  >\r\n    {loading ? 'Fetching' : 'Fetch Data'}\r\n  </button>\r\n\r\n  {selectedIds && selectedIds.length > 0 && (\r\n    <button\r\n      className='px-5 py-2 bg-green-600 text-white rounded border-2 border-green-600 hover:bg-green-400'\r\n      onClick={() => initiateRefundAll()}\r\n      disabled={refundPostLoading}\r\n    >\r\n      {refundPostLoading ? 'Refunding' : 'Refund All'}\r\n    </button>\r\n  )}\r\n\r\n  {requestedRefunds !== 0 && (\r\n    <div className='flex flex-col space-y-2 h-full'>\r\n      <p>Processed Refund Requests: {requestedRefunds}</p>\r\n      <p className='flex space-x-2'>\r\n        <p>Number of Refunds Success: {success}</p>\r\n         <TiTick className='text-green-600 text-xl' />\r\n      </p>\r\n      <p className='flex space-x-2 items-center h-4 '>\r\n        <p className=''>Number of Refunds Failed: {requestedRefunds - success}</p>\r\n        <p className='text-lg font-semibold text-red-600 '>X</p>\r\n      </p>\r\n    </div>\r\n  )}\r\n  {\r\n    refundStatusData && refundStatusData.length > 0 && \r\n    <button\r\n     className='px-5 py-2 rounded-md hover:bg-gray-700 border-2 text-white bg-black' disabled={downloading} \r\n     onClick={async()=>{downloadExcelFile(refundStatusData)}}>Download record</button>\r\n  }\r\n</div>\r\n<div>\r\n      {\r\n        bootcampData && bootcampData.length > 0 && <DynamicTable data={bootcampData}  component={(row) => (\r\n            <input\r\n              className='cursor-pointer'\r\n              type=\"checkbox\"\r\n              checked={selectedIds.includes(row.id)}\r\n              onChange={() => handleCheckboxChange(row.id)}\r\n            />\r\n          )}\r\n          action={\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectAll}\r\n              onChange={handleSelectAllChange}\r\n            />\r\n          }/>\r\n      }\r\n\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleRefund;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst usePost = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const post = async (data) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const isFormData = data instanceof FormData;\r\n      console.log(isFormData)\r\n      const response = await axios.post(url, data, {\r\n        withCredentials: true, \r\n        headers: isFormData ? {\r\n          'Content-Type': 'multipart/form-data',\r\n        } : {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setLoading(false);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err);\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n\r\n  return { post, loading, error };\r\n};\r\n\r\nexport default usePost;\r\n"],"names":["_ref","selectedBootcamp","setSelectedBootcamp","isMulti","options","setOptions","useState","data","bootcampData","useGet","useEffect","formattedOptions","map","i","label","title","value","id","length","_jsx","Select","className","name","placeholder","onChange","selectedOption","filename","downloading","setDownloading","downloadExcelFile","async","response","axios","post","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","error","showPopup","success","message","console","component","action","children","allColumns","Object","keys","_jsxs","column","row","rowIndex","MultipleRefund","bootcamps","setBootcamps","setBootcampData","loading","setLoading","setError","fetchTrigger","setFetchTrigger","selectedIds","setSelectedIds","selectAll","setSelectAll","requestedRefunds","setReq","setsuccess","useCreateExcelFile","refundStatusData","setRefundStatusData","bootcampUrl","useMemo","bootcamp","join","fetchLoading","fetchError","refundPostLoading","refundPostError","usePost","ids","content","BootcampSelect","onClick","disabled","userDetails","filter","includes","razorPayID","paymentid","log","output","results","noOfsuccess","reduce","acc","item","Number","status","initiateRefundAll","TiTick","DynamicTable","type","checked","handleCheckboxChange","prevSelectedIds","selectedId","handleSelectAllChange","prevSelectAll","setData","fetchData","useCallback","params","arguments","undefined","get","withCredentials","err","isFormData","FormData","headers"],"sourceRoot":""}