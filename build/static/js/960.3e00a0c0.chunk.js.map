{"version":3,"file":"static/js/960.3e00a0c0.chunk.js","mappings":"4KAIA,MAoCA,EApCuBA,IAAiE,IAAhE,iBAAEC,EAAgB,oBAAEC,EAAmB,QAAEC,GAAU,GAAOH,EAChF,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAG/BC,KAAMC,EAAe,KAAOC,EAAAA,EAAAA,SADxB,6BAGZC,EAAAA,EAAAA,YAAU,KACR,GAAIF,EAAc,CAChB,MAAMG,EAAmBH,EAAaI,KAAKC,IAAC,CAC1CC,MAAOD,EAAEE,MACTC,MAAOH,EAAEI,OAEXZ,EAAWM,IACNV,GAAoBU,EAAiBO,OAAS,IAAMf,GACvDD,EAAoBS,EAAiB,GAEzC,IACC,CAACH,EAAcP,EAAkBE,IAMpC,OACEgB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,UAAU,WACVC,KAAK,WACLN,MAAOf,EACPG,QAASA,EACTD,QAASA,EACToB,YAAY,gBACZC,SAZkBC,IACpBvB,EAAoBuB,EAAe,GAYjC,C,0ECjCN,MAmCA,EAnCgBC,IACd,MAAOC,EAASC,IAActB,EAAAA,EAAAA,WAAS,IAChCC,EAAMsB,IAAWvB,EAAAA,EAAAA,UAAS,KAC1BwB,EAAOC,IAAYzB,EAAAA,EAAAA,UAAS,MAE7B0B,GAAYC,EAAAA,EAAAA,cAAYC,iBAAwB,IAAjBC,EAAMC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE7C,GAAKV,EAAL,CAEAE,GAAW,GACXG,EAAS,MACT,IACE,MAAMO,QAAiBC,EAAAA,EAAMC,IAAId,EAAK,CACpCS,SACAM,iBAAiB,IAEnBZ,EAAQS,EAAS/B,KACnB,CAAE,MAAOmC,GACPX,EAASW,EACX,CAAC,QACCd,GAAW,EACb,CAdgB,CAelB,GAAG,CAACF,IAUJ,OARAhB,EAAAA,EAAAA,YAAU,KACLgB,GACDM,GACF,GAGC,CAACA,IAEG,CAAEA,YAAWzB,OAAMoB,UAASG,QAAO,C","sources":["AdminComponents/Components/BootcampSelect.js","AdminComponents/Hooks/Get.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst BootcampSelect = ({ selectedBootcamp, setSelectedBootcamp, isMulti = false }) => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const url = `/bootcamps/bootcamp?id=0`;\r\n  const { data: bootcampData = [] } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (bootcampData) {\r\n      const formattedOptions = bootcampData.map((i) => ({\r\n        label: i.title,\r\n        value: i.id,\r\n      }));\r\n      setOptions(formattedOptions);\r\n      if (!selectedBootcamp && formattedOptions.length > 0 && !isMulti) {\r\n        setSelectedBootcamp(formattedOptions[0]);\r\n      }\r\n    }\r\n  }, [bootcampData, selectedBootcamp, isMulti]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedBootcamp(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      className=\"w-64 h-8\"\r\n      name=\"bootcamp\"\r\n      value={selectedBootcamp}\r\n      options={options}\r\n      isMulti={isMulti}\r\n      placeholder=\"Bootcamp Name\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BootcampSelect;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n"],"names":["_ref","selectedBootcamp","setSelectedBootcamp","isMulti","options","setOptions","useState","data","bootcampData","useGet","useEffect","formattedOptions","map","i","label","title","value","id","length","_jsx","Select","className","name","placeholder","onChange","selectedOption","url","loading","setLoading","setData","error","setError","fetchData","useCallback","async","params","arguments","undefined","response","axios","get","withCredentials","err"],"sourceRoot":""}