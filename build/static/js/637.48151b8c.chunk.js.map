{"version":3,"file":"static/js/637.48151b8c.chunk.js","mappings":"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","sources":["AdminComponents/Components/CreateExcelFile.js","AdminComponents/Components/DynamicTable.js","AdminComponents/Components/EmailDrafter.js","AdminComponents/DataComponents/RegistrationData.js","AdminComponents/Hooks/Get.js","AdminComponents/Hooks/UsePost.js","AdminComponents/NavComponents/Registration.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { showPopup } from \"../../Components/Notification\";\r\n\r\nconst useCreateExcelFile = (filename) => {\r\n    const [downloading, setDownloading] = useState(false);\r\n\r\n    const downloadExcelFile = async (data) => {\r\n        try {\r\n            setDownloading(true);\r\n\r\n            const response = await axios.post(`/createExcel`, data, {\r\n                responseType: 'blob',\r\n            });\r\n\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', filename+'.xlsx');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            document.body.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n\r\n            setDownloading(false);\r\n        } catch (error) {\r\n            setDownloading(false);\r\n            showPopup({ success: false, message: 'Error in downloading file' });\r\n            console.error('Error downloading file:', error);\r\n        }\r\n    };\r\n\r\n    return { downloadExcelFile, downloading };\r\n};\r\n\r\nexport default useCreateExcelFile;\r\n","import React from 'react';\r\n\r\nconst DynamicTable = ({ data, component, action }) => {\r\n  if (!data || data.length === 0) {\r\n    return <p>No data available</p>;\r\n  }\r\n\r\n  const columns = Object.keys(data[0]);\r\n  const allColumns = ['Action', ...columns];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto m-4\">\r\n      <div className=\"overflow-y-auto h-[500px] no-scrollbar\">\r\n        <table className=\"min-w-full border border-collapse border-gray-200\">\r\n          <thead className=\"bg-gray-100 border-b w-full sticky top-0 z-5 h-16\">\r\n            <tr>\r\n              {allColumns.map((column) => (\r\n                <th className=\"py-2 px-4 border-b text-center bg-gray-100\" key={column}>\r\n                  {column === 'Action' ? action : column}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr className=\"py-2 px-4 border-b text-center\" key={rowIndex}>\r\n                {allColumns.map((column) => {\r\n                  if (column === 'Action') {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {component(row)}\r\n                      </td>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <td className=\"py-2 px-4 border-b text-center\" key={column}>\r\n                        {row[column]}\r\n                      </td>\r\n                    );\r\n                  }\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n","import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport usePost from '../Hooks/UsePost';\r\n\r\n\r\nconst EmailDrafter = ({ emails, onClose,showPopup }) => {\r\n  const [subject, setSubject] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [errors,setErrors]=useState({})\r\n  const { post, loading, error } = usePost(`/send-email`);\r\n  const [scheduleOption, setScheduleOption] = useState('now'); // 'now' or 'schedule'\r\n  const formatForDateTimeLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  };\r\n  \r\n  const [scheduleDate, setScheduleDate] = useState(formatForDateTimeLocal(new Date()));\r\n  const handleFilesChange = (e) => {\r\n    setFiles(Array.from(e.target.files));\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const newEr = {}\r\n    if ( !content) {\r\n      newEr.content = \"cant send empty email\"\r\n      setErrors(newEr);\r\n      return;\r\n    }\r\n    setErrors(newEr);\r\n    \r\n    setIsSending(true);\r\n    const formData = new FormData();\r\n    formData.append('subject', subject);\r\n    formData.append('message', content);\r\n    formData.append('to', JSON.stringify(emails));\r\n\r\n    files.forEach((file) => {\r\n      formData.append('files', file);\r\n    });\r\n    if (scheduleOption === 'schedule') {\r\n      const now = new Date();\r\n      const scheduledTime = new Date(scheduleDate);\r\n      const offset = 5.5 * 60 * 60 * 1000; \r\n      const scheduledTimeUTC = new Date(scheduledTime.getTime() - offset);\r\n       const delayMs = scheduledTime.getTime() - now.getTime();\r\n      \r\n      \r\n      formData.append('startDelay', delayMs);\r\n      console.log(delayMs)\r\n    }else{\r\n      formData.append('startDelay', 0);\r\n    }\r\n    try {\r\n      await post(formData);\r\n     showPopup({success: true, message: 'email sent' })\r\n      onClose(); \r\n    } catch (error) {\r\n      console.error('Failed to send emails:', error);\r\n      showPopup({success:false, message: 'Couldnt send email' })\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex justify-center items-center\">\r\n      <div className=\"bg-white w-11/12 md:w-2/3 lg:w-1/2 p-4 rounded-lg\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-lg font-bold\">Draft Email</h2>\r\n          <button onClick={onClose} className=\"text-xl font-bold\">&times;</button>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">To:</label>\r\n          <div className=\"border p-2 rounded\">\r\n            {emails.join(', ')}\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Subject:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={subject}\r\n            required\r\n            onChange={(e) => setSubject(e.target.value)}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Body:</label>\r\n          <ReactQuill value={content} onChange={setContent} />\r\n          {errors.content && <p className='text-red-300'> {errors.content}</p>}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-bold mb-2\">Attach Files:</label>\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            onChange={handleFilesChange}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          />\r\n          {files.length > 0 && (\r\n            <div>\r\n              <h3 className=\"font-semibold mt-2\">Selected Files:</h3>\r\n              <ul>\r\n                {files.map((file, index) => (\r\n                  <li key={index}>{file.name}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-4\">\r\n       \r\n          <label className=\"block text-sm font-bold mb-2\">Schedule Email:</label>\r\n          <select\r\n            value={scheduleOption}\r\n            onChange={(e) => setScheduleOption(e.target.value)}\r\n            className=\"w-full border border-gray-300 p-2 rounded\"\r\n          >\r\n            <option value=\"now\">Send Now</option>\r\n            <option value=\"schedule\">Schedule for Later</option>\r\n          </select>\r\n          {scheduleOption === 'schedule' && (\r\n            <div className=\"mt-2\">\r\n              <label className=\"block text-sm font-bold mb-2\">Schedule Date & Time:</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                min={formatForDateTimeLocal(new Date())}\r\n\r\n                value={scheduleDate}\r\n\r\n                onChange={(e) => setScheduleDate(e.target.value)}\r\n                className=\"w-full border border-gray-300 p-2 rounded\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end mt-4\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded mr-2\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleSend}\r\n            className={`bg-blue-500 text-white px-4 py-2 rounded ${loading || isSending ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n            disabled={loading || isSending}\r\n          >\r\n            {loading || isSending ? 'Sending...' : 'Send'}  \r\n          </button>\r\n        </div>\r\n        {error && <p className=\"text-red-500 mt-2\">Error: {error.message}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default EmailDrafter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst RegistrationData = ({ bootcampId }) => {\r\n  const [registrationsData, setRegistrationsData] = useState([]);\r\n  const [shouldFetch, setShouldFetch] = useState(false);\r\n\r\n  const url = bootcampId !== 0 ? `/registrations/registrations?bootcampId=${bootcampId}` : null;\r\n\r\n  const { fetchData, data, loading, error } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (bootcampId !== 0) {\r\n      setShouldFetch(true);\r\n    } else {\r\n      setShouldFetch(false);\r\n    }\r\n  }, [bootcampId]);\r\n\r\n  useEffect(() => {\r\n    if (shouldFetch) {\r\n      fetchData();\r\n    }\r\n  }, [shouldFetch, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setRegistrationsData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return registrationsData;\r\n};\r\n\r\nexport default RegistrationData;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useGet = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (params = {}) => {\r\n\r\n    if (!url) return;\r\n   \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params,\r\n        withCredentials: true,\r\n      });\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if(url){\r\n      fetchData();\r\n    }\r\n   \r\n   \r\n  }, [fetchData]); \r\n\r\n  return { fetchData, data, loading, error };\r\n};\r\n\r\nexport default useGet;\r\n","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst usePost = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const post = async (data) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const isFormData = data instanceof FormData;\r\n      console.log(isFormData)\r\n      const response = await axios.post(url, data, {\r\n        withCredentials: true, \r\n        headers: isFormData ? {\r\n          'Content-Type': 'multipart/form-data',\r\n        } : {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setLoading(false);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err);\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n\r\n  return { post, loading, error };\r\n};\r\n\r\nexport default usePost;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport EmailDrafter from '../Components/EmailDrafter';\r\nimport {  showPopup } from '../../Components/Notification';\r\nimport RegistrationData from '../DataComponents/RegistrationData';\r\nimport DynamicTable from '../Components/DynamicTable';\r\nimport axios from 'axios';\r\nimport useGet from '../Hooks/Get';\r\nimport useCreateExcelFile from '../Components/CreateExcelFile';\r\n\r\n\r\nconst Registration = () => {\r\n  const [options, setOptions] = useState([]);\r\n  const [bootcamp, setBootCamp] = useState(null);\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedEmail,setSelectedEmails] = useState([])\r\n  const [showEmailDrafter, setShowEmailDrafter] = useState(false);\r\n  const {downloadExcelFile,downloading} = useCreateExcelFile('registration_data');\r\n\r\n  const url = `/bootcamps/bootcamp?id=0`\r\n  const { data: bootcampData = [], fetchData } = useGet(url); \r\n  \r\n  useEffect(() => {\r\n    if (bootcampData) {\r\n      const formattedOptions = bootcampData.map((i) => ({\r\n        label: i.title,\r\n        value: i.id,\r\n      }));\r\n      setOptions(formattedOptions);\r\n      if (!bootcamp && formattedOptions.length > 0) {\r\n        setBootCamp(formattedOptions[0]);\r\n      }\r\n    }\r\n  }, [bootcampData]);\r\n\r\n  const registrationsData = RegistrationData({ bootcampId: bootcamp ? bootcamp.value : 0 });\r\n\r\n  useEffect(() => {\r\n    if (selectAll && registrationsData) {\r\n      const ids = registrationsData.map((content) => content.id);\r\n      setSelectedIds(ids);\r\n    } else {\r\n      setSelectedIds([]);\r\n    }\r\n  }, [selectAll, registrationsData]);\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedIds((prevSelectedIds) =>\r\n      prevSelectedIds.includes(id)\r\n        ? prevSelectedIds.filter((selectedId) => selectedId !== id)\r\n        : [...prevSelectedIds, id]\r\n    );\r\n  };\r\n\r\n  const handleSelectAllChange = () => {\r\n    setSelectAll((prevSelectAll) => !prevSelectAll);\r\n  };\r\n  const InitiateEmailDrater=()=>{\r\n    const emails = registrationsData\r\n    .filter((content) => selectedIds.includes(content.id))\r\n    .map((content) => content.email);\r\n    setSelectedEmails(emails)\r\n    setShowEmailDrafter(true)\r\n  }\r\n  const CreateExcelFile = async()=>{\r\n    \r\n    const tempExcelData = registrationsData.filter((content)=>selectedIds.includes(content.id)).map((content)=>content)\r\n   downloadExcelFile(tempExcelData)\r\n   \r\n  }\r\n  return (\r\n    <div className='w-full'>\r\n      <div className='w-full flex items-center justify-between shadow-md py-6 px-4 h-24 mb-6'>\r\n        <p className='text-xl font-bold'>Registrations Data</p>\r\n        <Select\r\n          className=\"w-64\"\r\n          name=\"bootcamp\"\r\n          value={bootcamp}\r\n          options={options}\r\n          required\r\n          placeholder=\"Bootcamp Name\"\r\n          onChange={(selectedOption) => setBootCamp(selectedOption)}\r\n        />\r\n        <input\r\n          tabIndex={-1}\r\n          autoComplete=\"off\"\r\n          style={{ opacity: 0, height: 0, position: \"absolute\" }}\r\n          value={bootcamp ? bootcamp.value : ''}\r\n          onChange={() => {}}\r\n          required\r\n        />\r\n      </div>\r\n      <div className='pl-5 pb-3'>\r\n        {selectedIds.length !== 0 && (\r\n          <div className='flex space-x-4'>\r\n            <button className='bg-black px-5 py-2 text-white rounded-md' onClick={() => {InitiateEmailDrater()}}>\r\n            Send Mail\r\n          </button>\r\n          <button disabled={downloading} className='bg-black px-5 py-2 text-white rounded-md' onClick={() => {CreateExcelFile()}}>\r\n          {downloading?'Downloading':'Download'}\r\n        </button>\r\n            </div>\r\n        )}\r\n       \r\n      </div>\r\n     {\r\n      registrationsData &&  <DynamicTable\r\n      data={registrationsData}\r\n      component={(row) => (\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selectedIds.includes(row.id)}\r\n          onChange={() => handleCheckboxChange(row.id)}\r\n        />\r\n      )}\r\n      action={\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selectAll}\r\n          onChange={handleSelectAllChange}\r\n        />\r\n      }\r\n    />\r\n   \r\n     }\r\n      {showEmailDrafter && (\r\n        <EmailDrafter\r\n          emails={selectedEmail}\r\n          onClose={() => setShowEmailDrafter(false)}\r\n          showPopup={showPopup}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"names":["filename","downloading","setDownloading","useState","downloadExcelFile","async","response","axios","post","data","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","error","showPopup","success","message","console","_ref","component","action","length","_jsx","children","allColumns","Object","keys","className","_jsxs","map","column","row","rowIndex","emails","onClose","subject","setSubject","content","setContent","files","setFiles","isSending","setIsSending","errors","setErrors","loading","usePost","scheduleOption","setScheduleOption","formatForDateTimeLocal","date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","scheduleDate","setScheduleDate","Date","onClick","join","type","value","required","onChange","e","target","ReactQuill","multiple","Array","from","file","index","name","min","newEr","formData","FormData","append","JSON","stringify","forEach","now","scheduledTime","offset","delayMs","getTime","log","disabled","bootcampId","registrationsData","setRegistrationsData","shouldFetch","setShouldFetch","fetchData","useGet","useEffect","setLoading","setData","setError","useCallback","params","arguments","undefined","get","withCredentials","err","isFormData","headers","Registration","options","setOptions","bootcamp","setBootCamp","selectedIds","setSelectedIds","selectAll","setSelectAll","selectedEmail","setSelectedEmails","showEmailDrafter","setShowEmailDrafter","useCreateExcelFile","bootcampData","formattedOptions","i","label","title","id","RegistrationData","ids","Select","placeholder","selectedOption","tabIndex","autoComplete","style","opacity","height","position","InitiateEmailDrater","filter","includes","email","tempExcelData","CreateExcelFile","DynamicTable","checked","handleCheckboxChange","prevSelectedIds","selectedId","handleSelectAllChange","prevSelectAll","EmailDrafter"],"sourceRoot":""}