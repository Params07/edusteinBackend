{"version":3,"file":"static/js/198.f22de66b.chunk.js","mappings":"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","sources":["AdminComponents/Components/Bootcamp.js","AdminComponents/DataComponents/BootCampData.js","AdminComponents/Hooks/UsePost.js","AdminComponents/OptionComponents/Edit.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst Bootcamp = ({ initialData = {}, action }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [additionalInfo, setAdditionalInfo] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [useCurrentTime, setUseCurrentTime] = useState(false);\r\n  const [amount, setAmount] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [minDateTime, setMinDateTime] = useState('');\r\n  const quillRef = useRef(null);\r\n  const flag = Object.keys(initialData).length > 0 \r\n  useEffect(() => {\r\n    const now = new Date();\r\n    const minDateTimeString = now.toISOString().slice(0, 16);\r\n    setMinDateTime(minDateTimeString);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (flag) {\r\n      const formatDate = (date) => {\r\n        if (!date) return '';\r\n        const d = new Date(date);\r\n        return d.toISOString().slice(0, 16);\r\n      };\r\n\r\n      setMinDateTime(formatDate(initialData.start_date));\r\n      setTitle(initialData.title || '');\r\n      setStartDate(formatDate(initialData.start_date));\r\n      setEndDate(formatDate(initialData.end_date));\r\n      setAdditionalInfo(initialData.additional_info || '');\r\n      setAmount(initialData.amount || '');\r\n\r\n     \r\n        setImage(initialData.image_path || '');\r\n        setImagePreview(initialData.image_path || '');\r\n      \r\n    }\r\n  }, [initialData]);\r\n\r\n  const handleUseCurrentTimeChange = (event) => {\r\n    const checked = event.target.checked;\r\n    setUseCurrentTime(checked);\r\n    if (checked) {\r\n      setStartDate(minDateTime);\r\n    } else {\r\n      setStartDate('');\r\n      setEndDate('');\r\n    }\r\n  };\r\n\r\n  const addHoursToDate = (dateString, hours) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    date.setHours(date.getHours() + hours);\r\n    return date.toISOString().slice(0, 16);\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    \r\n    \r\n      setImage(e.target.value);\r\n      setImagePreview(e.target.value);\r\n    \r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let now = new Date();\r\n    const errors = {};\r\n    if (initialData) {\r\n      now = minDateTime;\r\n    }\r\n    if (useCurrentTime) {\r\n      if (!startDate) {\r\n        errors.startDate = 'Start date is required.';\r\n      }\r\n    } else {\r\n      if (new Date(startDate) <= now) {\r\n        errors.startDate = 'Start date must be in the future.';\r\n      }\r\n    }\r\n\r\n    if (new Date(endDate) <= new Date(startDate)) {\r\n      errors.endDate = 'End date must be at least 1 hour after start date.';\r\n    }\r\n    if (additionalInfo.length < 20) {\r\n      errors.additionalInfo = 'Additional info should be more than 20 characters.';\r\n    }\r\n    if (image == null) {\r\n      errors.image = 'Image field cannot be empty.';\r\n    }\r\n    if (!amount) {\r\n      errors.amount = 'Amount field cannot be empty.';\r\n    }\r\n    setErrors(errors);\r\n    if (Object.keys(errors).length) {\r\n      return;\r\n    }\r\n  console.log(image)\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('startDate', startDate);\r\n    formData.append('endDate', endDate);\r\n    formData.append('additionalInfo', additionalInfo);\r\n    formData.append('image_path', image);\r\n    formData.append('amount', amount);\r\n\r\n    if (action(formData)) {\r\n      handleReset();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTitle(initialData.title || '');\r\n    setStartDate(initialData.startDate || '');\r\n    setEndDate(initialData.endDate || '');\r\n    setAdditionalInfo(initialData.additionalInfo || '');\r\n    setImage(initialData.image_path || null);\r\n    setImagePreview(initialData.image_path ? initialData.image : null);\r\n    setAmount(initialData.amount || '');\r\n    setUseCurrentTime(false);\r\n    setErrors({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">{initialData.title ? 'Edit Bootcamp' : 'Add Bootcamp'}</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"title\" className=\"text-lg font-semibold mb-2\">Bootcamp Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className=\"p-2 border rounded\"\r\n            placeholder=\"Enter Bootcamp Title\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className={`\"flex flex-col mb-4\" `}>\r\n          <div className={`${useCurrentTime ? 'hidden' : 'block'} flex flex-col mb-4`}>\r\n            <label htmlFor=\"start-date\" className=\"text-lg font-semibold mb-2\">Start Date and Time:</label>\r\n            <input\r\n              type=\"datetime-local\"\r\n              id=\"start-date\"\r\n              name=\"start-date\"\r\n              min={minDateTime}\r\n              value={startDate}\r\n              onChange={(e) => setStartDate(e.target.value)}\r\n              className={`p-2 border rounded ${errors.startDate ? 'border-red-500' : ''}`}\r\n              disabled={useCurrentTime}\r\n              required\r\n            />\r\n          </div>\r\n          {errors.startDate && <p className=\"text-red-500\">{errors.startDate}</p>}\r\n          <div className=\"flex items-center mt-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"use-current-time\"\r\n              checked={useCurrentTime}\r\n              onChange={handleUseCurrentTimeChange}\r\n              className=\"mr-2\"\r\n            />\r\n            <label htmlFor=\"use-current-time\" className=\"text-lg font-semibold\">Use Current Time</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"end-date\" className=\"text-lg font-semibold mb-2\">End Date and Time:</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"end-date\"\r\n            name=\"end-date\"\r\n            value={endDate}\r\n            min={addHoursToDate(startDate === '' ? minDateTime : startDate, 1)}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            className={`p-2 border rounded ${errors.endDate ? 'border-red-500' : ''}`}\r\n            required\r\n          />\r\n          {errors.endDate && <p className=\"text-red-500\">{errors.endDate}</p>}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"image\" className=\"text-lg font-semibold mb-2\">Upload Image:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"image\"\r\n            name=\"image\"\r\n            value={image}\r\n            onChange={handleImageChange}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          {errors.image && <p className=\"text-red-500\">{errors.image}</p>}\r\n          {imagePreview && (\r\n            <img\r\n              src={imagePreview}\r\n              alt=\"Preview\"\r\n              className=\"mt-4 w-24 h-32\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"additional-info\" className=\"text-lg font-semibold mb-2\">Additional Info:</label>\r\n          <ReactQuill\r\n            ref={quillRef}\r\n            id=\"additional-info\"\r\n            value={additionalInfo}\r\n            onChange={setAdditionalInfo}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          {errors.additionalInfo && <p className=\"text-red-500\">{errors.additionalInfo}</p>}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mb-4\">\r\n          <label htmlFor=\"amount\" className=\"text-lg font-semibold mb-2\">Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            className={`p-2 border rounded ${errors.amount ? 'border-red-500' : ''}`}\r\n            placeholder=\"Enter Amount\"\r\n            required\r\n          />\r\n          {errors.amount && <p className=\"text-red-500\">{errors.amount}</p>}\r\n        </div>\r\n\r\n        <div className=\"flex justify-between\">\r\n          <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">{flag ? 'Save': 'Add Bootcamp' }</button>\r\n          {flag && <button type=\"button\" onClick={handleReset} className=\"bg-gray-300 text-black p-2 rounded\">Cancel</button>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}; \r\n\r\nexport default Bootcamp;\r\n","// BootCampData.js\r\nimport { useEffect, useState } from 'react';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst useBootCampData = (bootcampId) => {\r\n  const [bootcampData, setBootcampData] = useState(null);\r\n  const url = bootcampId !== 0 ? `/bootcamps/bootcamp?id=${bootcampId}` : null;\r\n  const { fetchData, data, loading, error } = useGet(url);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetchData();\r\n    }\r\n  }, [url, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBootcampData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return { bootcampData, loading, error };\r\n};\r\n\r\nexport default useBootCampData;\r\n","import { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst usePost = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const post = async (data) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const isFormData = data instanceof FormData;\r\n      console.log(isFormData)\r\n      const response = await axios.post(url, data, {\r\n        withCredentials: true, \r\n        headers: isFormData ? {\r\n          'Content-Type': 'multipart/form-data',\r\n        } : {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setLoading(false);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err);\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n\r\n  return { post, loading, error };\r\n};\r\n\r\nexport default usePost;\r\n","import React, { useMemo } from 'react';\r\nimport useBootCampData from '../DataComponents/BootCampData'; // Updated import\r\nimport Bootcamp from '../Components/Bootcamp';\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { showPopup } from '../../Components/Notification';\r\nimport usePost from '../Hooks/UsePost';\r\nimport useGet from '../Hooks/Get';\r\n\r\nconst Edit = ({ id, action }) => {\r\n  console.log(id)\r\n  const url = useMemo(() => `/bootcamps/bootcamp?id=${id}`, [id]); \r\n\r\n  const { data: bootcampData, loading, error } = useGet(url);\r\n  const { post } = usePost(`/bootcamps/updateBootcamp`);\r\n\r\n  const check = async (alteredData) => {\r\n    \r\n    if (bootcampData && bootcampData[0]) {\r\n      \r\n      alteredData.append('id', id);\r\n      for (let pair of alteredData.entries()) {\r\n        console.log(pair[0] + ': ' + pair[1]);\r\n      }\r\n      try {\r\n        const result = await post(alteredData);\r\n        showPopup({ success: true, message: 'Success update' });\r\n        action(true);\r\n        return true;\r\n      } catch (error) {\r\n        console.error('There was a problem with the axios request:', error);\r\n        showPopup({ success: false, message: error.message });\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex justify-center items-center h-full\">\r\n      <div className=\"bg-white w-11/12 md:w-2/3 lg:w-1/2 p-4 rounded-lg h-5/6 overflow-y-auto\">\r\n        <span className=\"w-full flex justify-end\">\r\n          <IoClose onClick={() => { action(true); }} className=\"cursor-pointer text-4xl text-red-500\" />\r\n        </span>\r\n        {bootcampData && bootcampData[0] && (\r\n          <Bootcamp initialData={bootcampData[0]} action={check} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n"],"names":["_ref","initialData","action","title","setTitle","useState","startDate","setStartDate","endDate","setEndDate","additionalInfo","setAdditionalInfo","image","setImage","imagePreview","setImagePreview","useCurrentTime","setUseCurrentTime","amount","setAmount","errors","setErrors","minDateTime","setMinDateTime","quillRef","useRef","flag","Object","keys","length","useEffect","minDateTimeString","Date","toISOString","slice","formatDate","date","start_date","end_date","additional_info","image_path","handleReset","_jsxs","className","children","_jsx","onSubmit","event","preventDefault","now","console","log","formData","FormData","append","htmlFor","type","id","name","value","onChange","e","target","placeholder","required","min","disabled","checked","addHoursToDate","dateString","hours","setHours","getHours","src","alt","ReactQuill","ref","onClick","bootcampId","bootcampData","setBootcampData","url","fetchData","data","loading","error","useGet","setLoading","setError","post","async","isFormData","response","axios","withCredentials","headers","err","useMemo","usePost","IoClose","Bootcamp","alteredData","pair","entries","showPopup","success","message"],"sourceRoot":""}